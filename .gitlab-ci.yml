stages:
  - quality
  - frontend-testing
  - integration-testing
  - load-testing
  - publish

before_script:
  - mkdir -p /go/src/gitlab.com/prixfixe/
  - cp -rf /builds/prixfixe/prixfixe /go/src/gitlab.com/prixfixe/
  - cd /go/src/gitlab.com/prixfixe/prixfixe
  - apt-get update -y && apt-get install -y make git gcc musl-dev

formatting:
  stage: quality
  image: golang:stretch
  variables:
    GOPATH: "/go"
  script:
    - apt-get update -y && apt-get install -y make git gcc musl-dev
    - if [ $(gofmt -l . | grep -Ev '^vendor\/' | head -c1 | wc -c) -ne 0 ]; then exit 1; fi

coverage:
  stage: quality
  image: golang:stretch
  variables:
    GOPATH: "/go"
  script:
    - apt-get update -y && apt-get install -y make git gcc musl-dev
    - make coverage

# unit-tests:
#   stage: quality
#   image: golang:stretch
#   variables:
#     GOPATH: "/go"
#   script:
#     - apt-get update -y && apt-get install -y make git gcc musl-dev
#     - make gitlab-ci-junit-report
#   artifacts:
#     reports:
#       junit: test_artifacts/unit_test_report.xml

linting:
  stage: quality
  image: golangci/golangci-lint:latest # v1.18
  variables:
    GO111MODULE: "on"
  script:
    - golangci-lint run --config=.golangci.yml --deadline=15m

build-frontend:
  stage: quality
  image: node:10
  before_script:
    - cd frontend/v1
    - npm install
  script:
    - npm run build

integration-tests-postgres:
  stage: integration-testing
  image: docker:latest
  services:
    - docker:dind
  variables:
    GOPATH: "/go"
  script:
    - apk add --update --no-cache py-pip openssl python3-dev libffi-dev
      openssl-dev gcc libc-dev make
    - pip install docker-compose
    - make integration-tests-postgres

frontend-selenium-tests:
  stage: integration-testing
  image: docker:latest
  services:
    - docker:dind
  variables:
    GOPATH: "/go"
  script:
    - apk add --update --no-cache py-pip openssl python3-dev libffi-dev
      openssl-dev gcc libc-dev make
    - pip install docker-compose
    - make frontend-tests

# weekly load tests

weekly-load-tests-postgres:on-schedule:
  stage: load-testing
  image: docker:latest
  services:
    - docker:dind
  variables:
    GOPATH: "/go"
    LOADTEST_RUN_TIME: "10m"
  script:
    - apk add --update --no-cache py-pip openssl python3-dev libffi-dev
      openssl-dev gcc libc-dev make
    - pip install docker-compose
    - make load-tests-postgres
  only:
    - schedules

# miscellaneous

build-dev-container:
  stage: publish
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login --username=gitlab-ci-token --password=$CI_JOB_TOKEN registry.gitlab.com
    - docker build --tag registry.gitlab.com/prixfixe/prixfixe:dev --file dockerfiles/server.Dockerfile .
    - docker push registry.gitlab.com/prixfixe/prixfixe:dev
  only:
    - dev

build-prod-container:
  stage: publish
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker login --username=gitlab-ci-token --password=$CI_JOB_TOKEN registry.gitlab.com
    - docker build --tag registry.gitlab.com/prixfixe/prixfixe:dev --file dockerfiles/server.Dockerfile .
    - docker push registry.gitlab.com/prixfixe/prixfixe:dev
  only:
    - prod
