package authorization

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestAuthorizations(T *testing.T) {
	T.Parallel()

	T.Run("service user", func(t *testing.T) {
		t.Parallel()

		assert.False(t, CanCreateValidInstruments(serviceUserRoleName))
		assert.False(t, CanSeeValidInstruments(serviceUserRoleName))
		assert.False(t, CanSearchValidInstruments(serviceUserRoleName))
		assert.False(t, CanUpdateValidInstruments(serviceUserRoleName))
		assert.False(t, CanDeleteValidInstruments(serviceUserRoleName))
		assert.False(t, CanCreateValidIngredients(serviceUserRoleName))
		assert.False(t, CanSeeValidIngredients(serviceUserRoleName))
		assert.False(t, CanSearchValidIngredients(serviceUserRoleName))
		assert.False(t, CanUpdateValidIngredients(serviceUserRoleName))
		assert.False(t, CanDeleteValidIngredients(serviceUserRoleName))
		assert.False(t, CanCreateValidPreparations(serviceUserRoleName))
		assert.False(t, CanSeeValidPreparations(serviceUserRoleName))
		assert.False(t, CanSearchValidPreparations(serviceUserRoleName))
		assert.False(t, CanUpdateValidPreparations(serviceUserRoleName))
		assert.False(t, CanDeleteValidPreparations(serviceUserRoleName))
		assert.False(t, CanCreateValidIngredientPreparations(serviceUserRoleName))
		assert.False(t, CanSeeValidIngredientPreparations(serviceUserRoleName))
		assert.False(t, CanUpdateValidIngredientPreparations(serviceUserRoleName))
		assert.False(t, CanDeleteValidIngredientPreparations(serviceUserRoleName))
		assert.False(t, CanCreateRecipes(serviceUserRoleName))
		assert.False(t, CanSeeRecipes(serviceUserRoleName))
		assert.False(t, CanUpdateRecipes(serviceUserRoleName))
		assert.False(t, CanDeleteRecipes(serviceUserRoleName))
		assert.False(t, CanCreateRecipeSteps(serviceUserRoleName))
		assert.False(t, CanSeeRecipeSteps(serviceUserRoleName))
		assert.False(t, CanUpdateRecipeSteps(serviceUserRoleName))
		assert.False(t, CanDeleteRecipeSteps(serviceUserRoleName))
		assert.False(t, CanCreateRecipeStepInstruments(serviceUserRoleName))
		assert.False(t, CanSeeRecipeStepInstruments(serviceUserRoleName))
		assert.False(t, CanUpdateRecipeStepInstruments(serviceUserRoleName))
		assert.False(t, CanDeleteRecipeStepInstruments(serviceUserRoleName))
		assert.False(t, CanCreateRecipeStepIngredients(serviceUserRoleName))
		assert.False(t, CanSeeRecipeStepIngredients(serviceUserRoleName))
		assert.False(t, CanUpdateRecipeStepIngredients(serviceUserRoleName))
		assert.False(t, CanDeleteRecipeStepIngredients(serviceUserRoleName))
		assert.False(t, CanCreateRecipeStepProducts(serviceUserRoleName))
		assert.False(t, CanSeeRecipeStepProducts(serviceUserRoleName))
		assert.False(t, CanUpdateRecipeStepProducts(serviceUserRoleName))
		assert.False(t, CanDeleteRecipeStepProducts(serviceUserRoleName))
		assert.False(t, CanCreateMealPlans(serviceUserRoleName))
		assert.False(t, CanSeeMealPlans(serviceUserRoleName))
		assert.False(t, CanUpdateMealPlans(serviceUserRoleName))
		assert.False(t, CanDeleteMealPlans(serviceUserRoleName))
		assert.False(t, CanCreateMealPlanOptions(serviceUserRoleName))
		assert.False(t, CanSeeMealPlanOptions(serviceUserRoleName))
		assert.False(t, CanUpdateMealPlanOptions(serviceUserRoleName))
		assert.False(t, CanDeleteMealPlanOptions(serviceUserRoleName))
		assert.False(t, CanCreateMealPlanOptionVotes(serviceUserRoleName))
		assert.False(t, CanSeeMealPlanOptionVotes(serviceUserRoleName))
		assert.False(t, CanUpdateMealPlanOptionVotes(serviceUserRoleName))
		assert.False(t, CanDeleteMealPlanOptionVotes(serviceUserRoleName))
	})

	T.Run("service admin", func(t *testing.T) {
		t.Parallel()

		assert.True(t, CanCreateValidInstruments(serviceAdminRoleName))
		assert.True(t, CanSeeValidInstruments(serviceAdminRoleName))
		assert.True(t, CanSearchValidInstruments(serviceAdminRoleName))
		assert.True(t, CanUpdateValidInstruments(serviceAdminRoleName))
		assert.True(t, CanDeleteValidInstruments(serviceAdminRoleName))
		assert.True(t, CanCreateValidIngredients(serviceAdminRoleName))
		assert.True(t, CanSeeValidIngredients(serviceAdminRoleName))
		assert.True(t, CanSearchValidIngredients(serviceAdminRoleName))
		assert.True(t, CanUpdateValidIngredients(serviceAdminRoleName))
		assert.True(t, CanDeleteValidIngredients(serviceAdminRoleName))
		assert.True(t, CanCreateValidPreparations(serviceAdminRoleName))
		assert.True(t, CanSeeValidPreparations(serviceAdminRoleName))
		assert.True(t, CanSearchValidPreparations(serviceAdminRoleName))
		assert.True(t, CanUpdateValidPreparations(serviceAdminRoleName))
		assert.True(t, CanDeleteValidPreparations(serviceAdminRoleName))
		assert.True(t, CanCreateValidIngredientPreparations(serviceAdminRoleName))
		assert.True(t, CanSeeValidIngredientPreparations(serviceAdminRoleName))
		assert.True(t, CanUpdateValidIngredientPreparations(serviceAdminRoleName))
		assert.True(t, CanDeleteValidIngredientPreparations(serviceAdminRoleName))
		assert.True(t, CanCreateRecipes(serviceAdminRoleName))
		assert.True(t, CanSeeRecipes(serviceAdminRoleName))
		assert.True(t, CanUpdateRecipes(serviceAdminRoleName))
		assert.True(t, CanDeleteRecipes(serviceAdminRoleName))
		assert.True(t, CanCreateRecipeSteps(serviceAdminRoleName))
		assert.True(t, CanSeeRecipeSteps(serviceAdminRoleName))
		assert.True(t, CanUpdateRecipeSteps(serviceAdminRoleName))
		assert.True(t, CanDeleteRecipeSteps(serviceAdminRoleName))
		assert.True(t, CanCreateRecipeStepInstruments(serviceAdminRoleName))
		assert.True(t, CanSeeRecipeStepInstruments(serviceAdminRoleName))
		assert.True(t, CanUpdateRecipeStepInstruments(serviceAdminRoleName))
		assert.True(t, CanDeleteRecipeStepInstruments(serviceAdminRoleName))
		assert.True(t, CanCreateRecipeStepIngredients(serviceAdminRoleName))
		assert.True(t, CanSeeRecipeStepIngredients(serviceAdminRoleName))
		assert.True(t, CanUpdateRecipeStepIngredients(serviceAdminRoleName))
		assert.True(t, CanDeleteRecipeStepIngredients(serviceAdminRoleName))
		assert.True(t, CanCreateRecipeStepProducts(serviceAdminRoleName))
		assert.True(t, CanSeeRecipeStepProducts(serviceAdminRoleName))
		assert.True(t, CanUpdateRecipeStepProducts(serviceAdminRoleName))
		assert.True(t, CanDeleteRecipeStepProducts(serviceAdminRoleName))
		assert.True(t, CanCreateMealPlans(serviceAdminRoleName))
		assert.True(t, CanSeeMealPlans(serviceAdminRoleName))
		assert.True(t, CanUpdateMealPlans(serviceAdminRoleName))
		assert.True(t, CanDeleteMealPlans(serviceAdminRoleName))
		assert.True(t, CanCreateMealPlanOptions(serviceAdminRoleName))
		assert.True(t, CanSeeMealPlanOptions(serviceAdminRoleName))
		assert.True(t, CanUpdateMealPlanOptions(serviceAdminRoleName))
		assert.True(t, CanDeleteMealPlanOptions(serviceAdminRoleName))
		assert.True(t, CanCreateMealPlanOptionVotes(serviceAdminRoleName))
		assert.True(t, CanSeeMealPlanOptionVotes(serviceAdminRoleName))
		assert.True(t, CanUpdateMealPlanOptionVotes(serviceAdminRoleName))
		assert.True(t, CanDeleteMealPlanOptionVotes(serviceAdminRoleName))
	})

	T.Run("household admin", func(t *testing.T) {
		t.Parallel()

		assert.False(t, CanCreateValidInstruments(householdAdminRoleName))
		assert.True(t, CanSeeValidInstruments(householdAdminRoleName))
		assert.True(t, CanSearchValidInstruments(householdAdminRoleName))
		assert.False(t, CanUpdateValidInstruments(householdAdminRoleName))
		assert.False(t, CanDeleteValidInstruments(householdAdminRoleName))
		assert.False(t, CanCreateValidIngredients(householdAdminRoleName))
		assert.True(t, CanSeeValidIngredients(householdAdminRoleName))
		assert.True(t, CanSearchValidIngredients(householdAdminRoleName))
		assert.False(t, CanUpdateValidIngredients(householdAdminRoleName))
		assert.False(t, CanDeleteValidIngredients(householdAdminRoleName))
		assert.False(t, CanCreateValidPreparations(householdAdminRoleName))
		assert.True(t, CanSeeValidPreparations(householdAdminRoleName))
		assert.True(t, CanSearchValidPreparations(householdAdminRoleName))
		assert.False(t, CanUpdateValidPreparations(householdAdminRoleName))
		assert.False(t, CanDeleteValidPreparations(householdAdminRoleName))
		assert.False(t, CanCreateValidIngredientPreparations(householdAdminRoleName))
		assert.True(t, CanSeeValidIngredientPreparations(householdAdminRoleName))
		assert.False(t, CanUpdateValidIngredientPreparations(householdAdminRoleName))
		assert.False(t, CanDeleteValidIngredientPreparations(householdAdminRoleName))
		assert.True(t, CanCreateRecipes(householdAdminRoleName))
		assert.True(t, CanSeeRecipes(householdAdminRoleName))
		assert.True(t, CanUpdateRecipes(householdAdminRoleName))
		assert.True(t, CanDeleteRecipes(householdAdminRoleName))
		assert.True(t, CanCreateRecipeSteps(householdAdminRoleName))
		assert.True(t, CanSeeRecipeSteps(householdAdminRoleName))
		assert.True(t, CanUpdateRecipeSteps(householdAdminRoleName))
		assert.True(t, CanDeleteRecipeSteps(householdAdminRoleName))
		assert.True(t, CanCreateRecipeStepInstruments(householdAdminRoleName))
		assert.True(t, CanSeeRecipeStepInstruments(householdAdminRoleName))
		assert.True(t, CanUpdateRecipeStepInstruments(householdAdminRoleName))
		assert.True(t, CanDeleteRecipeStepInstruments(householdAdminRoleName))
		assert.True(t, CanCreateRecipeStepIngredients(householdAdminRoleName))
		assert.True(t, CanSeeRecipeStepIngredients(householdAdminRoleName))
		assert.True(t, CanUpdateRecipeStepIngredients(householdAdminRoleName))
		assert.True(t, CanDeleteRecipeStepIngredients(householdAdminRoleName))
		assert.True(t, CanCreateRecipeStepProducts(householdAdminRoleName))
		assert.True(t, CanSeeRecipeStepProducts(householdAdminRoleName))
		assert.True(t, CanUpdateRecipeStepProducts(householdAdminRoleName))
		assert.True(t, CanDeleteRecipeStepProducts(householdAdminRoleName))
		assert.True(t, CanCreateMealPlans(householdAdminRoleName))
		assert.True(t, CanSeeMealPlans(householdAdminRoleName))
		assert.True(t, CanUpdateMealPlans(householdAdminRoleName))
		assert.True(t, CanDeleteMealPlans(householdAdminRoleName))
		assert.True(t, CanCreateMealPlanOptions(householdAdminRoleName))
		assert.True(t, CanSeeMealPlanOptions(householdAdminRoleName))
		assert.True(t, CanUpdateMealPlanOptions(householdAdminRoleName))
		assert.True(t, CanDeleteMealPlanOptions(householdAdminRoleName))
		assert.True(t, CanCreateMealPlanOptionVotes(householdAdminRoleName))
		assert.True(t, CanSeeMealPlanOptionVotes(householdAdminRoleName))
		assert.True(t, CanUpdateMealPlanOptionVotes(householdAdminRoleName))
		assert.True(t, CanDeleteMealPlanOptionVotes(householdAdminRoleName))
	})

	T.Run("household member", func(t *testing.T) {
		t.Parallel()

		assert.True(t, CanCreateRecipes(householdMemberRoleName))
		assert.True(t, CanSeeRecipes(householdMemberRoleName))
		assert.True(t, CanUpdateRecipes(householdMemberRoleName))
		assert.True(t, CanDeleteRecipes(householdMemberRoleName))
		assert.True(t, CanCreateRecipeSteps(householdMemberRoleName))
		assert.True(t, CanSeeRecipeSteps(householdMemberRoleName))
		assert.True(t, CanUpdateRecipeSteps(householdMemberRoleName))
		assert.True(t, CanDeleteRecipeSteps(householdMemberRoleName))
		assert.True(t, CanCreateRecipeStepInstruments(householdMemberRoleName))
		assert.True(t, CanSeeRecipeStepInstruments(householdMemberRoleName))
		assert.True(t, CanUpdateRecipeStepInstruments(householdMemberRoleName))
		assert.True(t, CanDeleteRecipeStepInstruments(householdMemberRoleName))
		assert.True(t, CanCreateRecipeStepIngredients(householdMemberRoleName))
		assert.True(t, CanSeeRecipeStepIngredients(householdMemberRoleName))
		assert.True(t, CanUpdateRecipeStepIngredients(householdMemberRoleName))
		assert.True(t, CanDeleteRecipeStepIngredients(householdMemberRoleName))
		assert.True(t, CanCreateRecipeStepProducts(householdMemberRoleName))
		assert.True(t, CanSeeRecipeStepProducts(householdMemberRoleName))
		assert.True(t, CanUpdateRecipeStepProducts(householdMemberRoleName))
		assert.True(t, CanDeleteRecipeStepProducts(householdMemberRoleName))
		assert.False(t, CanCreateMealPlans(householdMemberRoleName))
		assert.True(t, CanSeeMealPlans(householdMemberRoleName))
		assert.False(t, CanUpdateMealPlans(householdMemberRoleName))
		assert.False(t, CanDeleteMealPlans(householdMemberRoleName))
		assert.False(t, CanCreateMealPlanOptions(householdMemberRoleName))
		assert.True(t, CanSeeMealPlanOptions(householdMemberRoleName))
		assert.False(t, CanUpdateMealPlanOptions(householdMemberRoleName))
		assert.False(t, CanDeleteMealPlanOptions(householdMemberRoleName))
		assert.True(t, CanCreateMealPlanOptionVotes(householdMemberRoleName))
		assert.True(t, CanSeeMealPlanOptionVotes(householdMemberRoleName))
		assert.True(t, CanUpdateMealPlanOptionVotes(householdMemberRoleName))
		assert.True(t, CanDeleteMealPlanOptionVotes(householdMemberRoleName))
	})
}
