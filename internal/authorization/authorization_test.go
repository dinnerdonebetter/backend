package authorization

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestAuthorizations(T *testing.T) {
	T.Parallel()

	T.Run("service user", func(t *testing.T) {
		t.Parallel()

		assert.False(t, CanCreateValidInstruments(serviceUserRoleName))
		assert.False(t, CanSeeValidInstruments(serviceUserRoleName))
		assert.False(t, CanSearchValidInstruments(serviceUserRoleName))
		assert.False(t, CanUpdateValidInstruments(serviceUserRoleName))
		assert.False(t, CanDeleteValidInstruments(serviceUserRoleName))
		assert.False(t, CanCreateValidPreparations(serviceUserRoleName))
		assert.False(t, CanSeeValidPreparations(serviceUserRoleName))
		assert.False(t, CanSearchValidPreparations(serviceUserRoleName))
		assert.False(t, CanUpdateValidPreparations(serviceUserRoleName))
		assert.False(t, CanDeleteValidPreparations(serviceUserRoleName))
		assert.False(t, CanCreateValidIngredients(serviceUserRoleName))
		assert.False(t, CanSeeValidIngredients(serviceUserRoleName))
		assert.False(t, CanSearchValidIngredients(serviceUserRoleName))
		assert.False(t, CanUpdateValidIngredients(serviceUserRoleName))
		assert.False(t, CanDeleteValidIngredients(serviceUserRoleName))
		assert.False(t, CanCreateValidIngredientPreparations(serviceUserRoleName))
		assert.False(t, CanSeeValidIngredientPreparations(serviceUserRoleName))
		assert.False(t, CanUpdateValidIngredientPreparations(serviceUserRoleName))
		assert.False(t, CanDeleteValidIngredientPreparations(serviceUserRoleName))
		assert.False(t, CanCreateValidPreparationInstruments(serviceUserRoleName))
		assert.False(t, CanSeeValidPreparationInstruments(serviceUserRoleName))
		assert.False(t, CanUpdateValidPreparationInstruments(serviceUserRoleName))
		assert.False(t, CanDeleteValidPreparationInstruments(serviceUserRoleName))
		assert.False(t, CanCreateRecipes(serviceUserRoleName))
		assert.False(t, CanSeeRecipes(serviceUserRoleName))
		assert.False(t, CanUpdateRecipes(serviceUserRoleName))
		assert.False(t, CanDeleteRecipes(serviceUserRoleName))
		assert.False(t, CanCreateRecipeSteps(serviceUserRoleName))
		assert.False(t, CanSeeRecipeSteps(serviceUserRoleName))
		assert.False(t, CanUpdateRecipeSteps(serviceUserRoleName))
		assert.False(t, CanDeleteRecipeSteps(serviceUserRoleName))
		assert.False(t, CanCreateRecipeStepIngredients(serviceUserRoleName))
		assert.False(t, CanSeeRecipeStepIngredients(serviceUserRoleName))
		assert.False(t, CanUpdateRecipeStepIngredients(serviceUserRoleName))
		assert.False(t, CanDeleteRecipeStepIngredients(serviceUserRoleName))
		assert.False(t, CanCreateRecipeStepProducts(serviceUserRoleName))
		assert.False(t, CanSeeRecipeStepProducts(serviceUserRoleName))
		assert.False(t, CanUpdateRecipeStepProducts(serviceUserRoleName))
		assert.False(t, CanDeleteRecipeStepProducts(serviceUserRoleName))
		assert.False(t, CanCreateInvitations(serviceUserRoleName))
		assert.False(t, CanSeeInvitations(serviceUserRoleName))
		assert.False(t, CanUpdateInvitations(serviceUserRoleName))
		assert.False(t, CanDeleteInvitations(serviceUserRoleName))
		assert.False(t, CanCreateReports(serviceUserRoleName))
		assert.False(t, CanSeeReports(serviceUserRoleName))
		assert.False(t, CanUpdateReports(serviceUserRoleName))
		assert.False(t, CanDeleteReports(serviceUserRoleName))
	})

	T.Run("service admin", func(t *testing.T) {
		t.Parallel()

		assert.True(t, CanCreateValidInstruments(serviceAdminRoleName))
		assert.True(t, CanSeeValidInstruments(serviceAdminRoleName))
		assert.True(t, CanSearchValidInstruments(serviceAdminRoleName))
		assert.True(t, CanUpdateValidInstruments(serviceAdminRoleName))
		assert.True(t, CanDeleteValidInstruments(serviceAdminRoleName))
		assert.True(t, CanCreateValidPreparations(serviceAdminRoleName))
		assert.True(t, CanSeeValidPreparations(serviceAdminRoleName))
		assert.True(t, CanSearchValidPreparations(serviceAdminRoleName))
		assert.True(t, CanUpdateValidPreparations(serviceAdminRoleName))
		assert.True(t, CanDeleteValidPreparations(serviceAdminRoleName))
		assert.True(t, CanCreateValidIngredients(serviceAdminRoleName))
		assert.True(t, CanSeeValidIngredients(serviceAdminRoleName))
		assert.True(t, CanSearchValidIngredients(serviceAdminRoleName))
		assert.True(t, CanUpdateValidIngredients(serviceAdminRoleName))
		assert.True(t, CanDeleteValidIngredients(serviceAdminRoleName))
		assert.True(t, CanCreateValidIngredientPreparations(serviceAdminRoleName))
		assert.True(t, CanSeeValidIngredientPreparations(serviceAdminRoleName))
		assert.True(t, CanUpdateValidIngredientPreparations(serviceAdminRoleName))
		assert.True(t, CanDeleteValidIngredientPreparations(serviceAdminRoleName))
		assert.True(t, CanCreateValidPreparationInstruments(serviceAdminRoleName))
		assert.True(t, CanSeeValidPreparationInstruments(serviceAdminRoleName))
		assert.True(t, CanUpdateValidPreparationInstruments(serviceAdminRoleName))
		assert.True(t, CanDeleteValidPreparationInstruments(serviceAdminRoleName))
		assert.True(t, CanCreateRecipes(serviceAdminRoleName))
		assert.True(t, CanSeeRecipes(serviceAdminRoleName))
		assert.True(t, CanUpdateRecipes(serviceAdminRoleName))
		assert.True(t, CanDeleteRecipes(serviceAdminRoleName))
		assert.True(t, CanCreateRecipeSteps(serviceAdminRoleName))
		assert.True(t, CanSeeRecipeSteps(serviceAdminRoleName))
		assert.True(t, CanUpdateRecipeSteps(serviceAdminRoleName))
		assert.True(t, CanDeleteRecipeSteps(serviceAdminRoleName))
		assert.True(t, CanCreateRecipeStepIngredients(serviceAdminRoleName))
		assert.True(t, CanSeeRecipeStepIngredients(serviceAdminRoleName))
		assert.True(t, CanUpdateRecipeStepIngredients(serviceAdminRoleName))
		assert.True(t, CanDeleteRecipeStepIngredients(serviceAdminRoleName))
		assert.True(t, CanCreateRecipeStepProducts(serviceAdminRoleName))
		assert.True(t, CanSeeRecipeStepProducts(serviceAdminRoleName))
		assert.True(t, CanUpdateRecipeStepProducts(serviceAdminRoleName))
		assert.True(t, CanDeleteRecipeStepProducts(serviceAdminRoleName))
		assert.True(t, CanCreateInvitations(serviceAdminRoleName))
		assert.True(t, CanSeeInvitations(serviceAdminRoleName))
		assert.True(t, CanUpdateInvitations(serviceAdminRoleName))
		assert.True(t, CanDeleteInvitations(serviceAdminRoleName))
		assert.True(t, CanCreateReports(serviceAdminRoleName))
		assert.True(t, CanSeeReports(serviceAdminRoleName))
		assert.True(t, CanUpdateReports(serviceAdminRoleName))
		assert.True(t, CanDeleteReports(serviceAdminRoleName))
	})

	T.Run("account admin", func(t *testing.T) {
		t.Parallel()

		assert.True(t, CanCreateValidInstruments(accountAdminRoleName))
		assert.True(t, CanSeeValidInstruments(accountAdminRoleName))
		assert.True(t, CanSearchValidInstruments(accountAdminRoleName))
		assert.True(t, CanUpdateValidInstruments(accountAdminRoleName))
		assert.True(t, CanDeleteValidInstruments(accountAdminRoleName))
		assert.True(t, CanCreateValidPreparations(accountAdminRoleName))
		assert.True(t, CanSeeValidPreparations(accountAdminRoleName))
		assert.True(t, CanSearchValidPreparations(accountAdminRoleName))
		assert.True(t, CanUpdateValidPreparations(accountAdminRoleName))
		assert.True(t, CanDeleteValidPreparations(accountAdminRoleName))
		assert.True(t, CanCreateValidIngredients(accountAdminRoleName))
		assert.True(t, CanSeeValidIngredients(accountAdminRoleName))
		assert.True(t, CanSearchValidIngredients(accountAdminRoleName))
		assert.True(t, CanUpdateValidIngredients(accountAdminRoleName))
		assert.True(t, CanDeleteValidIngredients(accountAdminRoleName))
		assert.True(t, CanCreateValidIngredientPreparations(accountAdminRoleName))
		assert.True(t, CanSeeValidIngredientPreparations(accountAdminRoleName))
		assert.True(t, CanUpdateValidIngredientPreparations(accountAdminRoleName))
		assert.True(t, CanDeleteValidIngredientPreparations(accountAdminRoleName))
		assert.True(t, CanCreateValidPreparationInstruments(accountAdminRoleName))
		assert.True(t, CanSeeValidPreparationInstruments(accountAdminRoleName))
		assert.True(t, CanUpdateValidPreparationInstruments(accountAdminRoleName))
		assert.True(t, CanDeleteValidPreparationInstruments(accountAdminRoleName))
		assert.True(t, CanCreateRecipes(accountAdminRoleName))
		assert.True(t, CanSeeRecipes(accountAdminRoleName))
		assert.True(t, CanUpdateRecipes(accountAdminRoleName))
		assert.True(t, CanDeleteRecipes(accountAdminRoleName))
		assert.True(t, CanCreateRecipeSteps(accountAdminRoleName))
		assert.True(t, CanSeeRecipeSteps(accountAdminRoleName))
		assert.True(t, CanUpdateRecipeSteps(accountAdminRoleName))
		assert.True(t, CanDeleteRecipeSteps(accountAdminRoleName))
		assert.True(t, CanCreateRecipeStepIngredients(accountAdminRoleName))
		assert.True(t, CanSeeRecipeStepIngredients(accountAdminRoleName))
		assert.True(t, CanUpdateRecipeStepIngredients(accountAdminRoleName))
		assert.True(t, CanDeleteRecipeStepIngredients(accountAdminRoleName))
		assert.True(t, CanCreateRecipeStepProducts(accountAdminRoleName))
		assert.True(t, CanSeeRecipeStepProducts(accountAdminRoleName))
		assert.True(t, CanUpdateRecipeStepProducts(accountAdminRoleName))
		assert.True(t, CanDeleteRecipeStepProducts(accountAdminRoleName))
		assert.True(t, CanCreateInvitations(accountAdminRoleName))
		assert.True(t, CanSeeInvitations(accountAdminRoleName))
		assert.True(t, CanUpdateInvitations(accountAdminRoleName))
		assert.True(t, CanDeleteInvitations(accountAdminRoleName))
		assert.True(t, CanCreateReports(accountAdminRoleName))
		assert.True(t, CanSeeReports(accountAdminRoleName))
		assert.True(t, CanUpdateReports(accountAdminRoleName))
		assert.True(t, CanDeleteReports(accountAdminRoleName))
	})

	T.Run("account member", func(t *testing.T) {
		t.Parallel()

		assert.True(t, CanCreateValidInstruments(accountMemberRoleName))
		assert.True(t, CanSeeValidInstruments(accountMemberRoleName))
		assert.True(t, CanSearchValidInstruments(accountMemberRoleName))
		assert.True(t, CanUpdateValidInstruments(accountMemberRoleName))
		assert.True(t, CanDeleteValidInstruments(accountMemberRoleName))
		assert.True(t, CanCreateValidPreparations(accountMemberRoleName))
		assert.True(t, CanSeeValidPreparations(accountMemberRoleName))
		assert.True(t, CanSearchValidPreparations(accountMemberRoleName))
		assert.True(t, CanUpdateValidPreparations(accountMemberRoleName))
		assert.True(t, CanDeleteValidPreparations(accountMemberRoleName))
		assert.True(t, CanCreateValidIngredients(accountMemberRoleName))
		assert.True(t, CanSeeValidIngredients(accountMemberRoleName))
		assert.True(t, CanSearchValidIngredients(accountMemberRoleName))
		assert.True(t, CanUpdateValidIngredients(accountMemberRoleName))
		assert.True(t, CanDeleteValidIngredients(accountMemberRoleName))
		assert.True(t, CanCreateValidIngredientPreparations(accountMemberRoleName))
		assert.True(t, CanSeeValidIngredientPreparations(accountMemberRoleName))
		assert.True(t, CanUpdateValidIngredientPreparations(accountMemberRoleName))
		assert.True(t, CanDeleteValidIngredientPreparations(accountMemberRoleName))
		assert.True(t, CanCreateValidPreparationInstruments(accountMemberRoleName))
		assert.True(t, CanSeeValidPreparationInstruments(accountMemberRoleName))
		assert.True(t, CanUpdateValidPreparationInstruments(accountMemberRoleName))
		assert.True(t, CanDeleteValidPreparationInstruments(accountMemberRoleName))
		assert.True(t, CanCreateRecipes(accountMemberRoleName))
		assert.True(t, CanSeeRecipes(accountMemberRoleName))
		assert.True(t, CanUpdateRecipes(accountMemberRoleName))
		assert.True(t, CanDeleteRecipes(accountMemberRoleName))
		assert.True(t, CanCreateRecipeSteps(accountMemberRoleName))
		assert.True(t, CanSeeRecipeSteps(accountMemberRoleName))
		assert.True(t, CanUpdateRecipeSteps(accountMemberRoleName))
		assert.True(t, CanDeleteRecipeSteps(accountMemberRoleName))
		assert.True(t, CanCreateRecipeStepIngredients(accountMemberRoleName))
		assert.True(t, CanSeeRecipeStepIngredients(accountMemberRoleName))
		assert.True(t, CanUpdateRecipeStepIngredients(accountMemberRoleName))
		assert.True(t, CanDeleteRecipeStepIngredients(accountMemberRoleName))
		assert.True(t, CanCreateRecipeStepProducts(accountMemberRoleName))
		assert.True(t, CanSeeRecipeStepProducts(accountMemberRoleName))
		assert.True(t, CanUpdateRecipeStepProducts(accountMemberRoleName))
		assert.True(t, CanDeleteRecipeStepProducts(accountMemberRoleName))
		assert.True(t, CanCreateInvitations(accountMemberRoleName))
		assert.True(t, CanSeeInvitations(accountMemberRoleName))
		assert.True(t, CanUpdateInvitations(accountMemberRoleName))
		assert.True(t, CanDeleteInvitations(accountMemberRoleName))
		assert.True(t, CanCreateReports(accountMemberRoleName))
		assert.True(t, CanSeeReports(accountMemberRoleName))
		assert.True(t, CanUpdateReports(accountMemberRoleName))
		assert.True(t, CanDeleteReports(accountMemberRoleName))
	})
}
