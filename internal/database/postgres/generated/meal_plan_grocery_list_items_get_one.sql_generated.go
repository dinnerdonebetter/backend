// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: meal_plan_grocery_list_items_get_one.sql

package generated

import (
	"context"
	"database/sql"
)

const GetMealPlanGroceryListItem = `-- name: GetMealPlanGroceryListItem :exec
SELECT
    meal_plan_grocery_list_items.id,
    meal_plan_grocery_list_items.belongs_to_meal_plan,
    meal_plan_grocery_list_items.valid_ingredient,
    meal_plan_grocery_list_items.valid_measurement_unit,
    meal_plan_grocery_list_items.minimum_quantity_needed,
    meal_plan_grocery_list_items.maximum_quantity_needed,
    meal_plan_grocery_list_items.quantity_purchased,
    meal_plan_grocery_list_items.purchased_measurement_unit,
    meal_plan_grocery_list_items.purchased_upc,
    meal_plan_grocery_list_items.purchase_price,
    meal_plan_grocery_list_items.status_explanation,
    meal_plan_grocery_list_items.status,
    meal_plan_grocery_list_items.created_at,
    meal_plan_grocery_list_items.last_updated_at,
    meal_plan_grocery_list_items.completed_at
FROM meal_plan_grocery_list_items
    FULL OUTER JOIN meal_plans ON meal_plan_grocery_list_items.belongs_to_meal_plan=meal_plans.id
WHERE meal_plan_grocery_list_items.completed_at IS NULL
  AND meal_plan_grocery_list_items.id = $2
  AND meal_plan_grocery_list_items.belongs_to_meal_plan = $1
`

type GetMealPlanGroceryListItemParams struct {
	BelongsToMealPlan string `db:"belongs_to_meal_plan"`
	ID                string `db:"id"`
}

type GetMealPlanGroceryListItemRow struct {
	CompletedAt              sql.NullTime              `db:"completed_at"`
	LastUpdatedAt            sql.NullTime              `db:"last_updated_at"`
	CreatedAt                sql.NullTime              `db:"created_at"`
	PurchasedMeasurementUnit sql.NullString            `db:"purchased_measurement_unit"`
	MinimumQuantityNeeded    sql.NullString            `db:"minimum_quantity_needed"`
	MaximumQuantityNeeded    sql.NullString            `db:"maximum_quantity_needed"`
	QuantityPurchased        sql.NullString            `db:"quantity_purchased"`
	ValidMeasurementUnit     sql.NullString            `db:"valid_measurement_unit"`
	PurchasedUpc             sql.NullString            `db:"purchased_upc"`
	PurchasePrice            sql.NullString            `db:"purchase_price"`
	StatusExplanation        sql.NullString            `db:"status_explanation"`
	Status                   NullGroceryListItemStatus `db:"status"`
	ValidIngredient          sql.NullString            `db:"valid_ingredient"`
	BelongsToMealPlan        sql.NullString            `db:"belongs_to_meal_plan"`
	ID                       sql.NullString            `db:"id"`
}

func (q *Queries) GetMealPlanGroceryListItem(ctx context.Context, db DBTX, arg *GetMealPlanGroceryListItemParams) error {
	_, err := db.ExecContext(ctx, GetMealPlanGroceryListItem, arg.BelongsToMealPlan, arg.ID)
	return err
}
