// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: recipe_prep_tasks_get_one.sql

package generated

import (
	"context"
	"database/sql"
)

const GetRecipePrepTask = `-- name: GetRecipePrepTask :exec
SELECT
    recipe_prep_tasks.id,
    recipe_prep_tasks.notes,
    recipe_prep_tasks.explicit_storage_instructions,
    recipe_prep_tasks.minimum_time_buffer_before_recipe_in_seconds,
    recipe_prep_tasks.maximum_time_buffer_before_recipe_in_seconds,
    recipe_prep_tasks.storage_type,
    recipe_prep_tasks.minimum_storage_temperature_in_celsius,
    recipe_prep_tasks.maximum_storage_temperature_in_celsius,
    recipe_prep_tasks.belongs_to_recipe,
    recipe_prep_tasks.created_at,
    recipe_prep_tasks.last_updated_at,
    recipe_prep_tasks.archived_at,
    recipe_prep_task_steps.id,
    recipe_prep_task_steps.belongs_to_recipe_step,
    recipe_prep_task_steps.belongs_to_recipe_prep_task,
    recipe_prep_task_steps.satisfies_recipe_step
FROM recipe_prep_tasks
     FULL OUTER JOIN recipe_prep_task_steps ON recipe_prep_tasks.id=recipe_prep_task_steps.belongs_to_recipe_prep_task
WHERE recipe_prep_tasks.archived_at IS NULL
    AND recipe_prep_tasks.id = $1
    AND recipe_prep_tasks.archived_at IS NULL
`

type GetRecipePrepTaskRow struct {
	CreatedAt                              sql.NullTime             `db:"created_at"`
	ArchivedAt                             sql.NullTime             `db:"archived_at"`
	LastUpdatedAt                          sql.NullTime             `db:"last_updated_at"`
	ID                                     sql.NullString           `db:"id"`
	BelongsToRecipeStep                    sql.NullString           `db:"belongs_to_recipe_step"`
	StorageType                            NullStorageContainerType `db:"storage_type"`
	MinimumStorageTemperatureInCelsius     sql.NullString           `db:"minimum_storage_temperature_in_celsius"`
	MaximumStorageTemperatureInCelsius     sql.NullString           `db:"maximum_storage_temperature_in_celsius"`
	BelongsToRecipe                        sql.NullString           `db:"belongs_to_recipe"`
	BelongsToRecipePrepTask                sql.NullString           `db:"belongs_to_recipe_prep_task"`
	ExplicitStorageInstructions            sql.NullString           `db:"explicit_storage_instructions"`
	Notes                                  sql.NullString           `db:"notes"`
	ID_2                                   sql.NullString           `db:"id_2"`
	MaximumTimeBufferBeforeRecipeInSeconds sql.NullInt32            `db:"maximum_time_buffer_before_recipe_in_seconds"`
	MinimumTimeBufferBeforeRecipeInSeconds sql.NullInt32            `db:"minimum_time_buffer_before_recipe_in_seconds"`
	SatisfiesRecipeStep                    sql.NullBool             `db:"satisfies_recipe_step"`
}

func (q *Queries) GetRecipePrepTask(ctx context.Context, db DBTX, id string) error {
	_, err := db.ExecContext(ctx, GetRecipePrepTask, id)
	return err
}
