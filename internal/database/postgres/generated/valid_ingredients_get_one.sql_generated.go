// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: valid_ingredients_get_one.sql

package generated

import (
	"context"
	"database/sql"
	"time"
)

const GetValidIngredient = `-- name: GetValidIngredient :exec
SELECT
	valid_ingredients.id,
	valid_ingredients.name,
	valid_ingredients.description,
	valid_ingredients.warning,
	valid_ingredients.contains_egg,
	valid_ingredients.contains_dairy,
	valid_ingredients.contains_peanut,
	valid_ingredients.contains_tree_nut,
	valid_ingredients.contains_soy,
	valid_ingredients.contains_wheat,
	valid_ingredients.contains_shellfish,
	valid_ingredients.contains_sesame,
	valid_ingredients.contains_fish,
	valid_ingredients.contains_gluten,
	valid_ingredients.animal_flesh,
	valid_ingredients.volumetric,
	valid_ingredients.is_liquid,
	valid_ingredients.icon_path,
	valid_ingredients.animal_derived,
	valid_ingredients.plural_name,
	valid_ingredients.restrict_to_preparations,
	valid_ingredients.minimum_ideal_storage_temperature_in_celsius,
	valid_ingredients.maximum_ideal_storage_temperature_in_celsius,
	valid_ingredients.storage_instructions,
	valid_ingredients.created_at,
	valid_ingredients.last_updated_at,
	valid_ingredients.archived_at
FROM valid_ingredients
WHERE valid_ingredients.archived_at IS NULL
AND valid_ingredients.id = $1
`

type GetValidIngredientRow struct {
	ID                                      string
	Name                                    string
	Description                             string
	Warning                                 string
	ContainsEgg                             bool
	ContainsDairy                           bool
	ContainsPeanut                          bool
	ContainsTreeNut                         bool
	ContainsSoy                             bool
	ContainsWheat                           bool
	ContainsShellfish                       bool
	ContainsSesame                          bool
	ContainsFish                            bool
	ContainsGluten                          bool
	AnimalFlesh                             bool
	Volumetric                              bool
	IsLiquid                                sql.NullBool
	IconPath                                string
	AnimalDerived                           bool
	PluralName                              string
	RestrictToPreparations                  bool
	MinimumIdealStorageTemperatureInCelsius sql.NullString
	MaximumIdealStorageTemperatureInCelsius sql.NullString
	StorageInstructions                     string
	CreatedAt                               time.Time
	LastUpdatedAt                           sql.NullTime
	ArchivedAt                              sql.NullTime
}

func (q *Queries) GetValidIngredient(ctx context.Context, id string) error {
	_, err := q.db.ExecContext(ctx, GetValidIngredient, id)
	return err
}
