// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: recipe_step_products_create.sql

package generated

import (
	"context"
	"database/sql"
)

const CreateRecipeStepProduct = `-- name: CreateRecipeStepProduct :exec
INSERT INTO recipe_step_products
(id,name,type,measurement_unit,minimum_quantity_value,maximum_quantity_value,quantity_notes,compostable,maximum_storage_duration_in_seconds,minimum_storage_temperature_in_celsius,maximum_storage_temperature_in_celsius,storage_instructions,belongs_to_recipe_step)
VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13)
`

type CreateRecipeStepProductParams struct {
	ID                                 string
	Name                               string
	Type                               RecipeStepProductType
	MeasurementUnit                    sql.NullString
	MinimumQuantityValue               string
	MaximumQuantityValue               string
	QuantityNotes                      string
	Compostable                        bool
	MaximumStorageDurationInSeconds    sql.NullInt32
	MinimumStorageTemperatureInCelsius sql.NullString
	MaximumStorageTemperatureInCelsius sql.NullString
	StorageInstructions                string
	BelongsToRecipeStep                string
}

func (q *Queries) CreateRecipeStepProduct(ctx context.Context, arg *CreateRecipeStepProductParams) error {
	_, err := q.db.ExecContext(ctx, CreateRecipeStepProduct,
		arg.ID,
		arg.Name,
		arg.Type,
		arg.MeasurementUnit,
		arg.MinimumQuantityValue,
		arg.MaximumQuantityValue,
		arg.QuantityNotes,
		arg.Compostable,
		arg.MaximumStorageDurationInSeconds,
		arg.MinimumStorageTemperatureInCelsius,
		arg.MaximumStorageTemperatureInCelsius,
		arg.StorageInstructions,
		arg.BelongsToRecipeStep,
	)
	return err
}
