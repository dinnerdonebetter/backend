// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: recipe_prep_tasks_create.sql

package generated

import (
	"context"
	"database/sql"
)

const CreateRecipePrepTask = `-- name: CreateRecipePrepTask :exec
INSERT INTO recipe_prep_tasks (id,notes,explicit_storage_instructions,minimum_time_buffer_before_recipe_in_seconds,maximum_time_buffer_before_recipe_in_seconds,storage_type,minimum_storage_temperature_in_celsius,maximum_storage_temperature_in_celsius,belongs_to_recipe)
VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9)
`

type CreateRecipePrepTaskParams struct {
	ID                                     string                   `db:"id"`
	Notes                                  string                   `db:"notes"`
	ExplicitStorageInstructions            string                   `db:"explicit_storage_instructions"`
	BelongsToRecipe                        string                   `db:"belongs_to_recipe"`
	StorageType                            NullStorageContainerType `db:"storage_type"`
	MinimumStorageTemperatureInCelsius     sql.NullString           `db:"minimum_storage_temperature_in_celsius"`
	MaximumStorageTemperatureInCelsius     sql.NullString           `db:"maximum_storage_temperature_in_celsius"`
	MaximumTimeBufferBeforeRecipeInSeconds sql.NullInt32            `db:"maximum_time_buffer_before_recipe_in_seconds"`
	MinimumTimeBufferBeforeRecipeInSeconds int32                    `db:"minimum_time_buffer_before_recipe_in_seconds"`
}

func (q *Queries) CreateRecipePrepTask(ctx context.Context, arg *CreateRecipePrepTaskParams) error {
	_, err := q.exec(ctx, q.createRecipePrepTaskStmt, CreateRecipePrepTask,
		arg.ID,
		arg.Notes,
		arg.ExplicitStorageInstructions,
		arg.MinimumTimeBufferBeforeRecipeInSeconds,
		arg.MaximumTimeBufferBeforeRecipeInSeconds,
		arg.StorageType,
		arg.MinimumStorageTemperatureInCelsius,
		arg.MaximumStorageTemperatureInCelsius,
		arg.BelongsToRecipe,
	)
	return err
}
