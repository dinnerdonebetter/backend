// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: get_one_past_voting_deadline.sql

package generated

import (
	"context"
	"database/sql"
	"time"
)

const GetOnePastVotingDeadline = `-- name: GetOnePastVotingDeadline :one

SELECT
	meal_plans.id,
	meal_plans.notes,
	meal_plans.status,
	meal_plans.voting_deadline,
	meal_plans.grocery_list_initialized,
	meal_plans.tasks_created,
	meal_plans.election_method,
	meal_plans.created_at,
	meal_plans.last_updated_at,
	meal_plans.archived_at,
	meal_plans.belongs_to_household,
	meal_plans.created_by_user
FROM meal_plans
WHERE meal_plans.archived_at IS NULL
	AND meal_plans.id = $1
	AND meal_plans.belongs_to_household = $2
	AND meal_plans.status = 'awaiting_votes'
	AND NOW() > meal_plans.voting_deadline
`

type GetOnePastVotingDeadlineParams struct {
	ID                 string `db:"id"`
	BelongsToHousehold string `db:"belongs_to_household"`
}

type GetOnePastVotingDeadlineRow struct {
	VotingDeadline         time.Time           `db:"voting_deadline"`
	CreatedAt              time.Time           `db:"created_at"`
	LastUpdatedAt          sql.NullTime        `db:"last_updated_at"`
	ArchivedAt             sql.NullTime        `db:"archived_at"`
	ID                     string              `db:"id"`
	Notes                  string              `db:"notes"`
	Status                 MealPlanStatus      `db:"status"`
	ElectionMethod         ValidElectionMethod `db:"election_method"`
	BelongsToHousehold     string              `db:"belongs_to_household"`
	CreatedByUser          string              `db:"created_by_user"`
	GroceryListInitialized bool                `db:"grocery_list_initialized"`
	TasksCreated           bool                `db:"tasks_created"`
}

func (q *Queries) GetOnePastVotingDeadline(ctx context.Context, db DBTX, arg *GetOnePastVotingDeadlineParams) (*GetOnePastVotingDeadlineRow, error) {
	row := db.QueryRowContext(ctx, GetOnePastVotingDeadline, arg.ID, arg.BelongsToHousehold)
	var i GetOnePastVotingDeadlineRow
	err := row.Scan(
		&i.ID,
		&i.Notes,
		&i.Status,
		&i.VotingDeadline,
		&i.GroceryListInitialized,
		&i.TasksCreated,
		&i.ElectionMethod,
		&i.CreatedAt,
		&i.LastUpdatedAt,
		&i.ArchivedAt,
		&i.BelongsToHousehold,
		&i.CreatedByUser,
	)
	return &i, err
}
