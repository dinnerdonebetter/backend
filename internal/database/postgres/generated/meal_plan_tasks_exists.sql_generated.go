// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: meal_plan_tasks_exists.sql

package generated

import (
	"context"
)

const MealPlanTaskExists = `-- name: MealPlanTaskExists :exec
SELECT EXISTS (
	SELECT meal_plan_tasks.id
	FROM meal_plan_tasks
		FULL OUTER JOIN meal_plan_options ON meal_plan_tasks.belongs_to_meal_plan_option=meal_plan_options.id
		FULL OUTER JOIN meal_plan_events ON meal_plan_options.belongs_to_meal_plan_event=meal_plan_events.id
		FULL OUTER JOIN meal_plans ON meal_plan_events.belongs_to_meal_plan=meal_plans.id
	WHERE meal_plan_tasks.completed_at IS NULL
		AND meal_plans.id = $1
		AND meal_plans.archived_at IS NULL
		AND meal_plan_tasks.id = $2
)
`

type MealPlanTaskExistsParams struct {
	ID   string `db:"id"`
	ID_2 string `db:"id_2"`
}

func (q *Queries) MealPlanTaskExists(ctx context.Context, db DBTX, arg *MealPlanTaskExistsParams) error {
	_, err := db.ExecContext(ctx, MealPlanTaskExists, arg.ID, arg.ID_2)
	return err
}
