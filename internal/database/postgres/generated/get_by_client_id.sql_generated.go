// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: get_by_client_id.sql

package generated

import (
	"context"
	"database/sql"
	"time"
)

const getOAuth2ClientByClientID = `-- name: GetOAuth2ClientByClientID :one

SELECT
	oauth2_clients.id,
	oauth2_clients.name,
	oauth2_clients.client_id,
	oauth2_clients.client_secret,
	oauth2_clients.created_at,
	oauth2_clients.archived_at
FROM oauth2_clients
WHERE oauth2_clients.archived_at IS NULL
	AND oauth2_clients.client_id = $1
`

type GetOAuth2ClientByClientIDRow struct {
	ID           string
	Name         string
	ClientID     string
	ClientSecret string
	CreatedAt    time.Time
	ArchivedAt   sql.NullTime
}

func (q *Queries) GetOAuth2ClientByClientID(ctx context.Context, db DBTX, clientID string) (*GetOAuth2ClientByClientIDRow, error) {
	row := db.QueryRowContext(ctx, getOAuth2ClientByClientID, clientID)
	var i GetOAuth2ClientByClientIDRow
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.ClientID,
		&i.ClientSecret,
		&i.CreatedAt,
		&i.ArchivedAt,
	)
	return &i, err
}
