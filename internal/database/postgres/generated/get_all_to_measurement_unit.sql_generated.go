// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: get_all_to_measurement_unit.sql

package generated

import (
	"context"
	"database/sql"
	"time"
)

const getAllValidMeasurementUnitConversionsToMeasurementUnit = `-- name: GetAllValidMeasurementUnitConversionsToMeasurementUnit :many

SELECT
	valid_measurement_conversions.id,
	valid_measurement_units_from.id as from_unit_id,
	valid_measurement_units_from.name as from_unit_name,
	valid_measurement_units_from.description as from_unit_description,
	valid_measurement_units_from.volumetric as from_unit_volumetric,
	valid_measurement_units_from.icon_path as from_unit_icon_path,
	valid_measurement_units_from.universal as from_unit_universal,
	valid_measurement_units_from.metric as from_unit_metric,
	valid_measurement_units_from.imperial as from_unit_imperial,
	valid_measurement_units_from.slug as from_unit_slug,
	valid_measurement_units_from.plural_name as from_unit_plural_name,
	valid_measurement_units_from.created_at as from_unit_created_at,
	valid_measurement_units_from.last_updated_at as from_unit_last_updated_at,
	valid_measurement_units_from.archived_at as from_unit_archived_at,
	valid_measurement_units_to.id as to_unit_id,
	valid_measurement_units_to.name as to_unit_name,
	valid_measurement_units_to.description as to_unit_description,
	valid_measurement_units_to.volumetric as to_unit_volumetric,
	valid_measurement_units_to.icon_path as to_unit_icon_path,
	valid_measurement_units_to.universal as to_unit_universal,
	valid_measurement_units_to.metric as to_unit_metric,
	valid_measurement_units_to.imperial as to_unit_imperial,
	valid_measurement_units_to.slug as to_unit_slug,
	valid_measurement_units_to.plural_name as to_unit_plural_name,
	valid_measurement_units_to.created_at as to_unit_created_at,
	valid_measurement_units_to.last_updated_at as to_unit_last_updated_at,
	valid_measurement_units_to.archived_at as to_unit_archived_at,
	valid_ingredients.id as valid_ingredient_id,
	valid_ingredients.name as valid_ingredient_name,
	valid_ingredients.description as valid_ingredient_description,
	valid_ingredients.warning as valid_ingredient_warning,
	valid_ingredients.contains_egg as valid_ingredient_contains_egg,
	valid_ingredients.contains_dairy as valid_ingredient_contains_dairy,
	valid_ingredients.contains_peanut as valid_ingredient_contains_peanut,
	valid_ingredients.contains_tree_nut as valid_ingredient_contains_tree_nut,
	valid_ingredients.contains_soy as valid_ingredient_contains_soy,
	valid_ingredients.contains_wheat as valid_ingredient_contains_wheat,
	valid_ingredients.contains_shellfish as valid_ingredient_contains_shellfish,
	valid_ingredients.contains_sesame as valid_ingredient_contains_sesame,
	valid_ingredients.contains_fish as valid_ingredient_contains_fish,
	valid_ingredients.contains_gluten as valid_ingredient_contains_gluten,
	valid_ingredients.animal_flesh as valid_ingredient_animal_flesh,
	valid_ingredients.volumetric as valid_ingredient_volumetric,
	valid_ingredients.is_liquid as valid_ingredient_is_liquid,
	valid_ingredients.icon_path as valid_ingredient_icon_path,
	valid_ingredients.animal_derived as valid_ingredient_animal_derived,
	valid_ingredients.plural_name as valid_ingredient_plural_name,
	valid_ingredients.restrict_to_preparations as valid_ingredient_restrict_to_preparations,
    COALESCE(valid_ingredients.minimum_ideal_storage_temperature_in_celsius, -1)::float as valid_ingredient_minimum_ideal_storage_temperature_in_celsius,
    COALESCE(valid_ingredients.maximum_ideal_storage_temperature_in_celsius, -1)::float as valid_ingredient_maximum_ideal_storage_temperature_in_celsius,
	valid_ingredients.storage_instructions as valid_ingredient_storage_instructions,
	valid_ingredients.slug as valid_ingredient_slug,
	valid_ingredients.contains_alcohol as valid_ingredient_contains_alcohol,
	valid_ingredients.shopping_suggestions as valid_ingredient_shopping_suggestions,
    valid_ingredients.is_starch as valid_ingredient_is_starch,
    valid_ingredients.is_protein as valid_ingredient_is_protein,
    valid_ingredients.is_grain as valid_ingredient_is_grain,
    valid_ingredients.is_fruit as valid_ingredient_is_fruit,
    valid_ingredients.is_salt as valid_ingredient_is_salt,
    valid_ingredients.is_fat as valid_ingredient_is_fat,
    valid_ingredients.is_acid as valid_ingredient_is_acid,
    valid_ingredients.is_heat as valid_ingredient_is_heat,
	valid_ingredients.created_at as valid_ingredient_created_at,
	valid_ingredients.last_updated_at as valid_ingredient_last_updated_at,
	valid_ingredients.archived_at as valid_ingredient_archived_at,
	valid_measurement_conversions.modifier::float,
	valid_measurement_conversions.notes,
	valid_measurement_conversions.created_at,
	valid_measurement_conversions.last_updated_at,
	valid_measurement_conversions.archived_at
FROM valid_measurement_conversions
     JOIN valid_measurement_units AS valid_measurement_units_from ON valid_measurement_conversions.from_unit = valid_measurement_units_from.id
     JOIN valid_measurement_units AS valid_measurement_units_to ON valid_measurement_conversions.to_unit = valid_measurement_units_to.id
     LEFT JOIN valid_ingredients ON valid_measurement_conversions.only_for_ingredient = valid_ingredients.id
WHERE valid_measurement_conversions.archived_at IS NULL
  AND valid_measurement_units_from.archived_at IS NULL
  AND valid_measurement_units_to.archived_at IS NULL
  AND valid_measurement_units_to.id = $1
`

type GetAllValidMeasurementUnitConversionsToMeasurementUnitRow struct {
	CreatedAt                                              time.Time
	ToUnitCreatedAt                                        time.Time
	FromUnitCreatedAt                                      time.Time
	FromUnitLastUpdatedAt                                  sql.NullTime
	ToUnitArchivedAt                                       sql.NullTime
	ToUnitLastUpdatedAt                                    sql.NullTime
	LastUpdatedAt                                          sql.NullTime
	ValidIngredientCreatedAt                               sql.NullTime
	ValidIngredientLastUpdatedAt                           sql.NullTime
	ArchivedAt                                             sql.NullTime
	ValidIngredientArchivedAt                              sql.NullTime
	FromUnitArchivedAt                                     sql.NullTime
	FromUnitSlug                                           string
	Notes                                                  string
	ToUnitID                                               string
	ToUnitName                                             string
	ToUnitDescription                                      string
	FromUnitPluralName                                     string
	ToUnitIconPath                                         string
	FromUnitName                                           string
	FromUnitDescription                                    string
	ID                                                     string
	ToUnitSlug                                             string
	ToUnitPluralName                                       string
	FromUnitID                                             string
	FromUnitIconPath                                       string
	ValidIngredientSlug                                    sql.NullString
	ValidIngredientIconPath                                sql.NullString
	ValidIngredientName                                    sql.NullString
	ValidIngredientDescription                             sql.NullString
	ValidIngredientWarning                                 sql.NullString
	ValidIngredientShoppingSuggestions                     sql.NullString
	ValidIngredientStorageInstructions                     sql.NullString
	ValidIngredientID                                      sql.NullString
	ValidIngredientPluralName                              sql.NullString
	ValidMeasurementConversionsModifier                    float64
	ValidIngredientMaximumIdealStorageTemperatureInCelsius float64
	ValidIngredientMinimumIdealStorageTemperatureInCelsius float64
	ValidIngredientRestrictToPreparations                  sql.NullBool
	ValidIngredientContainsDairy                           sql.NullBool
	ValidIngredientContainsGluten                          sql.NullBool
	ValidIngredientAnimalFlesh                             sql.NullBool
	ValidIngredientVolumetric                              sql.NullBool
	ValidIngredientIsLiquid                                sql.NullBool
	ValidIngredientContainsSesame                          sql.NullBool
	ValidIngredientAnimalDerived                           sql.NullBool
	ValidIngredientContainsShellfish                       sql.NullBool
	ValidIngredientContainsWheat                           sql.NullBool
	ValidIngredientContainsSoy                             sql.NullBool
	ValidIngredientContainsTreeNut                         sql.NullBool
	ValidIngredientContainsPeanut                          sql.NullBool
	FromUnitVolumetric                                     sql.NullBool
	ValidIngredientContainsAlcohol                         sql.NullBool
	ValidIngredientContainsFish                            sql.NullBool
	ValidIngredientIsStarch                                sql.NullBool
	ValidIngredientIsProtein                               sql.NullBool
	ValidIngredientIsGrain                                 sql.NullBool
	ValidIngredientIsFruit                                 sql.NullBool
	ValidIngredientIsSalt                                  sql.NullBool
	ValidIngredientIsFat                                   sql.NullBool
	ValidIngredientIsAcid                                  sql.NullBool
	ValidIngredientIsHeat                                  sql.NullBool
	ValidIngredientContainsEgg                             sql.NullBool
	ToUnitVolumetric                                       sql.NullBool
	ToUnitUniversal                                        bool
	ToUnitMetric                                           bool
	FromUnitImperial                                       bool
	FromUnitMetric                                         bool
	FromUnitUniversal                                      bool
	ToUnitImperial                                         bool
}

func (q *Queries) GetAllValidMeasurementUnitConversionsToMeasurementUnit(ctx context.Context, db DBTX, id string) ([]*GetAllValidMeasurementUnitConversionsToMeasurementUnitRow, error) {
	rows, err := db.QueryContext(ctx, getAllValidMeasurementUnitConversionsToMeasurementUnit, id)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []*GetAllValidMeasurementUnitConversionsToMeasurementUnitRow{}
	for rows.Next() {
		var i GetAllValidMeasurementUnitConversionsToMeasurementUnitRow
		if err := rows.Scan(
			&i.ID,
			&i.FromUnitID,
			&i.FromUnitName,
			&i.FromUnitDescription,
			&i.FromUnitVolumetric,
			&i.FromUnitIconPath,
			&i.FromUnitUniversal,
			&i.FromUnitMetric,
			&i.FromUnitImperial,
			&i.FromUnitSlug,
			&i.FromUnitPluralName,
			&i.FromUnitCreatedAt,
			&i.FromUnitLastUpdatedAt,
			&i.FromUnitArchivedAt,
			&i.ToUnitID,
			&i.ToUnitName,
			&i.ToUnitDescription,
			&i.ToUnitVolumetric,
			&i.ToUnitIconPath,
			&i.ToUnitUniversal,
			&i.ToUnitMetric,
			&i.ToUnitImperial,
			&i.ToUnitSlug,
			&i.ToUnitPluralName,
			&i.ToUnitCreatedAt,
			&i.ToUnitLastUpdatedAt,
			&i.ToUnitArchivedAt,
			&i.ValidIngredientID,
			&i.ValidIngredientName,
			&i.ValidIngredientDescription,
			&i.ValidIngredientWarning,
			&i.ValidIngredientContainsEgg,
			&i.ValidIngredientContainsDairy,
			&i.ValidIngredientContainsPeanut,
			&i.ValidIngredientContainsTreeNut,
			&i.ValidIngredientContainsSoy,
			&i.ValidIngredientContainsWheat,
			&i.ValidIngredientContainsShellfish,
			&i.ValidIngredientContainsSesame,
			&i.ValidIngredientContainsFish,
			&i.ValidIngredientContainsGluten,
			&i.ValidIngredientAnimalFlesh,
			&i.ValidIngredientVolumetric,
			&i.ValidIngredientIsLiquid,
			&i.ValidIngredientIconPath,
			&i.ValidIngredientAnimalDerived,
			&i.ValidIngredientPluralName,
			&i.ValidIngredientRestrictToPreparations,
			&i.ValidIngredientMinimumIdealStorageTemperatureInCelsius,
			&i.ValidIngredientMaximumIdealStorageTemperatureInCelsius,
			&i.ValidIngredientStorageInstructions,
			&i.ValidIngredientSlug,
			&i.ValidIngredientContainsAlcohol,
			&i.ValidIngredientShoppingSuggestions,
			&i.ValidIngredientIsStarch,
			&i.ValidIngredientIsProtein,
			&i.ValidIngredientIsGrain,
			&i.ValidIngredientIsFruit,
			&i.ValidIngredientIsSalt,
			&i.ValidIngredientIsFat,
			&i.ValidIngredientIsAcid,
			&i.ValidIngredientIsHeat,
			&i.ValidIngredientCreatedAt,
			&i.ValidIngredientLastUpdatedAt,
			&i.ValidIngredientArchivedAt,
			&i.ValidMeasurementConversionsModifier,
			&i.Notes,
			&i.CreatedAt,
			&i.LastUpdatedAt,
			&i.ArchivedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, &i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
