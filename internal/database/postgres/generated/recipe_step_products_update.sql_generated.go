// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: recipe_step_products_update.sql

package generated

import (
	"context"
	"database/sql"
)

const UpdateRecipeStepProduct = `-- name: UpdateRecipeStepProduct :exec
UPDATE recipe_step_products
SET
	name = $1,
	type = $2,
	measurement_unit = $3,
	minimum_quantity_value = $4,
	maximum_quantity_value = $5,
	quantity_notes = $6,
	compostable = $7,
	maximum_storage_duration_in_seconds = $8,
	minimum_storage_temperature_in_celsius = $9,
	maximum_storage_temperature_in_celsius = $10,
	storage_instructions = $11,
	last_updated_at = NOW()
WHERE archived_at IS NULL
	AND belongs_to_recipe_step = $12
	AND id = $13
`

type UpdateRecipeStepProductParams struct {
	StorageInstructions                string                `db:"storage_instructions"`
	Type                               RecipeStepProductType `db:"type"`
	BelongsToRecipeStep                string                `db:"belongs_to_recipe_step"`
	MinimumQuantityValue               string                `db:"minimum_quantity_value"`
	MaximumQuantityValue               string                `db:"maximum_quantity_value"`
	QuantityNotes                      string                `db:"quantity_notes"`
	Name                               string                `db:"name"`
	ID                                 string                `db:"id"`
	MinimumStorageTemperatureInCelsius sql.NullString        `db:"minimum_storage_temperature_in_celsius"`
	MaximumStorageTemperatureInCelsius sql.NullString        `db:"maximum_storage_temperature_in_celsius"`
	MeasurementUnit                    sql.NullString        `db:"measurement_unit"`
	MaximumStorageDurationInSeconds    sql.NullInt32         `db:"maximum_storage_duration_in_seconds"`
	Compostable                        bool                  `db:"compostable"`
}

func (q *Queries) UpdateRecipeStepProduct(ctx context.Context, arg *UpdateRecipeStepProductParams) error {
	_, err := q.exec(ctx, q.updateRecipeStepProductStmt, UpdateRecipeStepProduct,
		arg.Name,
		arg.Type,
		arg.MeasurementUnit,
		arg.MinimumQuantityValue,
		arg.MaximumQuantityValue,
		arg.QuantityNotes,
		arg.Compostable,
		arg.MaximumStorageDurationInSeconds,
		arg.MinimumStorageTemperatureInCelsius,
		arg.MaximumStorageTemperatureInCelsius,
		arg.StorageInstructions,
		arg.BelongsToRecipeStep,
		arg.ID,
	)
	return err
}
