// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: mark_two_factor_secret_as_unverified.sql

package generated

import (
	"context"
)

const MarkTwoFactorSecretAsUnverified = `-- name: MarkTwoFactorSecretAsUnverified :exec

UPDATE users SET
	two_factor_secret_verified_at = NULL,
	two_factor_secret = $1,
	last_updated_at = NOW()
WHERE archived_at IS NULL
	AND id = $2
`

type MarkTwoFactorSecretAsUnverifiedParams struct {
	TwoFactorSecret string `db:"two_factor_secret"`
	ID              string `db:"id"`
}

func (q *Queries) MarkTwoFactorSecretAsUnverified(ctx context.Context, db DBTX, arg *MarkTwoFactorSecretAsUnverifiedParams) error {
	_, err := db.ExecContext(ctx, MarkTwoFactorSecretAsUnverified, arg.TwoFactorSecret, arg.ID)
	return err
}
