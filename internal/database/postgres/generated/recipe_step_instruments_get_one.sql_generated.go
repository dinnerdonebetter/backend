// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: recipe_step_instruments_get_one.sql

package generated

import (
	"context"
	"database/sql"
	"time"
)

const GetRecipeStepInstrument = `-- name: GetRecipeStepInstrument :exec
SELECT
	recipe_step_instruments.id,
	valid_instruments.id,
	valid_instruments.name,
	valid_instruments.plural_name,
	valid_instruments.description,
	valid_instruments.icon_path,
	valid_instruments.usable_for_storage,
	valid_instruments.created_at,
	valid_instruments.last_updated_at,
	valid_instruments.archived_at,
	recipe_step_instruments.recipe_step_product_id,
	recipe_step_instruments.name,
	recipe_step_instruments.product_of_recipe_step,
	recipe_step_instruments.notes,
	recipe_step_instruments.preference_rank,
	recipe_step_instruments.optional,
	recipe_step_instruments.minimum_quantity,
	recipe_step_instruments.maximum_quantity,
	recipe_step_instruments.created_at,
	recipe_step_instruments.last_updated_at,
	recipe_step_instruments.archived_at,
	recipe_step_instruments.belongs_to_recipe_step
FROM recipe_step_instruments
	LEFT JOIN valid_instruments ON recipe_step_instruments.instrument_id=valid_instruments.id
	JOIN recipe_steps ON recipe_step_instruments.belongs_to_recipe_step=recipe_steps.id
	JOIN recipes ON recipe_steps.belongs_to_recipe=recipes.id
WHERE recipe_step_instruments.archived_at IS NULL
	AND recipe_step_instruments.belongs_to_recipe_step = $1
	AND recipe_step_instruments.id = $2
	AND recipe_steps.archived_at IS NULL
	AND recipe_steps.belongs_to_recipe = $3
	AND recipe_steps.id = $4
	AND recipes.archived_at IS NULL
	AND recipes.id = $5
`

type GetRecipeStepInstrumentParams struct {
	BelongsToRecipeStep string
	ID                  string
	BelongsToRecipe     string
	ID_2                string
	ID_3                string
}

type GetRecipeStepInstrumentRow struct {
	ID                  string
	ID_2                string
	Name                string
	PluralName          string
	Description         string
	IconPath            string
	UsableForStorage    bool
	CreatedAt           time.Time
	LastUpdatedAt       sql.NullTime
	ArchivedAt          sql.NullTime
	RecipeStepProductID sql.NullString
	Name_2              string
	ProductOfRecipeStep bool
	Notes               string
	PreferenceRank      int32
	Optional            bool
	MinimumQuantity     int32
	MaximumQuantity     int32
	CreatedAt_2         time.Time
	LastUpdatedAt_2     sql.NullTime
	ArchivedAt_2        sql.NullTime
	BelongsToRecipeStep string
}

func (q *Queries) GetRecipeStepInstrument(ctx context.Context, arg *GetRecipeStepInstrumentParams) error {
	_, err := q.db.ExecContext(ctx, GetRecipeStepInstrument,
		arg.BelongsToRecipeStep,
		arg.ID,
		arg.BelongsToRecipe,
		arg.ID_2,
		arg.ID_3,
	)
	return err
}
