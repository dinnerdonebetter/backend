// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0

package generated

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type InvitationState string

const (
	InvitationStatePending   InvitationState = "pending"
	InvitationStateCancelled InvitationState = "cancelled"
	InvitationStateAccepted  InvitationState = "accepted"
	InvitationStateRejected  InvitationState = "rejected"
)

func (e *InvitationState) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = InvitationState(s)
	case string:
		*e = InvitationState(s)
	default:
		return fmt.Errorf("unsupported scan type for InvitationState: %T", src)
	}
	return nil
}

type NullInvitationState struct {
	InvitationState InvitationState
	Valid           bool // Valid is true if String is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullInvitationState) Scan(value interface{}) error {
	if value == nil {
		ns.InvitationState, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.InvitationState.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullInvitationState) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return ns.InvitationState, nil
}

func (e InvitationState) Valid() bool {
	switch e {
	case InvitationStatePending,
		InvitationStateCancelled,
		InvitationStateAccepted,
		InvitationStateRejected:
		return true
	}
	return false
}

func AllInvitationStateValues() []InvitationState {
	return []InvitationState{
		InvitationStatePending,
		InvitationStateCancelled,
		InvitationStateAccepted,
		InvitationStateRejected,
	}
}

type MealName string

const (
	MealNameBreakfast       MealName = "breakfast"
	MealNameSecondBreakfast MealName = "second_breakfast"
	MealNameBrunch          MealName = "brunch"
	MealNameLunch           MealName = "lunch"
	MealNameSupper          MealName = "supper"
	MealNameDinner          MealName = "dinner"
)

func (e *MealName) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = MealName(s)
	case string:
		*e = MealName(s)
	default:
		return fmt.Errorf("unsupported scan type for MealName: %T", src)
	}
	return nil
}

type NullMealName struct {
	MealName MealName
	Valid    bool // Valid is true if String is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullMealName) Scan(value interface{}) error {
	if value == nil {
		ns.MealName, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.MealName.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullMealName) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return ns.MealName, nil
}

func (e MealName) Valid() bool {
	switch e {
	case MealNameBreakfast,
		MealNameSecondBreakfast,
		MealNameBrunch,
		MealNameLunch,
		MealNameSupper,
		MealNameDinner:
		return true
	}
	return false
}

func AllMealNameValues() []MealName {
	return []MealName{
		MealNameBreakfast,
		MealNameSecondBreakfast,
		MealNameBrunch,
		MealNameLunch,
		MealNameSupper,
		MealNameDinner,
	}
}

type MealPlanStatus string

const (
	MealPlanStatusAwaitingVotes MealPlanStatus = "awaiting_votes"
	MealPlanStatusFinalized     MealPlanStatus = "finalized"
)

func (e *MealPlanStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = MealPlanStatus(s)
	case string:
		*e = MealPlanStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for MealPlanStatus: %T", src)
	}
	return nil
}

type NullMealPlanStatus struct {
	MealPlanStatus MealPlanStatus
	Valid          bool // Valid is true if String is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullMealPlanStatus) Scan(value interface{}) error {
	if value == nil {
		ns.MealPlanStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.MealPlanStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullMealPlanStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return ns.MealPlanStatus, nil
}

func (e MealPlanStatus) Valid() bool {
	switch e {
	case MealPlanStatusAwaitingVotes,
		MealPlanStatusFinalized:
		return true
	}
	return false
}

func AllMealPlanStatusValues() []MealPlanStatus {
	return []MealPlanStatus{
		MealPlanStatusAwaitingVotes,
		MealPlanStatusFinalized,
	}
}

type RecipeStepProductType string

const (
	RecipeStepProductTypeIngredient RecipeStepProductType = "ingredient"
	RecipeStepProductTypeInstrument RecipeStepProductType = "instrument"
)

func (e *RecipeStepProductType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = RecipeStepProductType(s)
	case string:
		*e = RecipeStepProductType(s)
	default:
		return fmt.Errorf("unsupported scan type for RecipeStepProductType: %T", src)
	}
	return nil
}

type NullRecipeStepProductType struct {
	RecipeStepProductType RecipeStepProductType
	Valid                 bool // Valid is true if String is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullRecipeStepProductType) Scan(value interface{}) error {
	if value == nil {
		ns.RecipeStepProductType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.RecipeStepProductType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullRecipeStepProductType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return ns.RecipeStepProductType, nil
}

func (e RecipeStepProductType) Valid() bool {
	switch e {
	case RecipeStepProductTypeIngredient,
		RecipeStepProductTypeInstrument:
		return true
	}
	return false
}

func AllRecipeStepProductTypeValues() []RecipeStepProductType {
	return []RecipeStepProductType{
		RecipeStepProductTypeIngredient,
		RecipeStepProductTypeInstrument,
	}
}

type ApiClients struct {
	ID               string
	Name             sql.NullString
	ClientID         string
	SecretKey        []byte
	Permissions      int64
	AdminPermissions int64
	CreatedOn        int64
	LastUpdatedOn    sql.NullInt64
	ArchivedOn       sql.NullInt64
	BelongsToUser    string
}

type HouseholdInvitations struct {
	ID                   string
	DestinationHousehold string
	ToEmail              string
	ToUser               sql.NullString
	FromUser             string
	Status               InvitationState
	Note                 string
	StatusNote           string
	Token                string
	CreatedOn            int64
	LastUpdatedOn        sql.NullInt64
	ArchivedOn           sql.NullInt64
}

type HouseholdUserMemberships struct {
	ID                 string
	BelongsToHousehold string
	BelongsToUser      string
	DefaultHousehold   bool
	HouseholdRoles     string
	CreatedOn          int64
	LastUpdatedOn      sql.NullInt64
	ArchivedOn         sql.NullInt64
}

type Households struct {
	ID                         string
	Name                       string
	BillingStatus              string
	ContactEmail               string
	ContactPhone               string
	PaymentProcessorCustomerID string
	SubscriptionPlanID         sql.NullString
	CreatedOn                  int64
	LastUpdatedOn              sql.NullInt64
	ArchivedOn                 sql.NullInt64
	BelongsToUser              string
}

type MealPlanOptionVotes struct {
	ID                      string
	Rank                    int32
	Abstain                 bool
	Notes                   string
	ByUser                  string
	CreatedOn               int64
	LastUpdatedOn           sql.NullInt64
	ArchivedOn              sql.NullInt64
	BelongsToMealPlanOption string
}

type MealPlanOptions struct {
	ID                string
	Day               int32
	MealID            string
	Notes             string
	MealName          MealName
	Chosen            bool
	Tiebroken         bool
	CreatedOn         int64
	LastUpdatedOn     sql.NullInt64
	ArchivedOn        sql.NullInt64
	BelongsToMealPlan string
}

type MealPlans struct {
	ID                 string
	Notes              string
	Status             MealPlanStatus
	VotingDeadline     int64
	StartsAt           int64
	EndsAt             int64
	CreatedOn          int64
	LastUpdatedOn      sql.NullInt64
	ArchivedOn         sql.NullInt64
	BelongsToHousehold string
}

type MealRecipes struct {
	ID            string
	MealID        string
	RecipeID      string
	CreatedOn     int64
	LastUpdatedOn sql.NullInt64
	ArchivedOn    sql.NullInt64
}

type Meals struct {
	ID            string
	Name          string
	Description   string
	CreatedOn     int64
	LastUpdatedOn sql.NullInt64
	ArchivedOn    sql.NullInt64
	CreatedByUser string
}

type PasswordResetTokens struct {
	ID            string
	Token         string
	ExpiresAt     int64
	CreatedOn     int64
	LastUpdatedOn sql.NullInt64
	RedeemedOn    sql.NullInt64
	BelongsToUser string
}

type RecipeStepIngredients struct {
	ID                   string
	IngredientID         sql.NullString
	MinimumQuantityValue float64
	QuantityNotes        string
	ProductOfRecipeStep  bool
	IngredientNotes      string
	CreatedOn            int64
	LastUpdatedOn        sql.NullInt64
	ArchivedOn           sql.NullInt64
	BelongsToRecipeStep  string
	Name                 string
	RecipeStepProductID  sql.NullString
	MaximumQuantityValue float64
	MeasurementUnit      sql.NullString
}

type RecipeStepInstruments struct {
	ID                  string
	InstrumentID        sql.NullString
	Notes               string
	CreatedOn           int64
	LastUpdatedOn       sql.NullInt64
	ArchivedOn          sql.NullInt64
	BelongsToRecipeStep string
	PreferenceRank      int32
	RecipeStepProductID sql.NullString
	ProductOfRecipeStep bool
	Name                string
}

type RecipeStepProducts struct {
	ID                   string
	Name                 string
	CreatedOn            int64
	LastUpdatedOn        sql.NullInt64
	ArchivedOn           sql.NullInt64
	BelongsToRecipeStep  string
	QuantityNotes        string
	MinimumQuantityValue float64
	MaximumQuantityValue float64
	MeasurementUnit      sql.NullString
	Type                 RecipeStepProductType
}

type RecipeSteps struct {
	ID                            string
	Index                         int32
	PreparationID                 string
	MinimumEstimatedTimeInSeconds int64
	MaximumEstimatedTimeInSeconds int64
	MinimumTemperatureInCelsius   sql.NullInt32
	Notes                         string
	CreatedOn                     int64
	LastUpdatedOn                 sql.NullInt64
	ArchivedOn                    sql.NullInt64
	BelongsToRecipe               string
	Optional                      bool
	MaximumTemperatureInCelsius   sql.NullInt32
}

type Recipes struct {
	ID                 string
	Name               string
	Source             string
	Description        string
	InspiredByRecipeID sql.NullString
	CreatedOn          int64
	LastUpdatedOn      sql.NullInt64
	ArchivedOn         sql.NullInt64
	CreatedByUser      string
}

type Sessions struct {
	Token     string
	Data      []byte
	Expiry    time.Time
	CreatedOn int64
}

type Users struct {
	ID                           string
	Username                     string
	AvatarSrc                    sql.NullString
	EmailAddress                 string
	HashedPassword               string
	PasswordLastChangedOn        sql.NullInt32
	RequiresPasswordChange       bool
	TwoFactorSecret              string
	TwoFactorSecretVerifiedOn    sql.NullInt64
	ServiceRoles                 string
	UserAccountStatus            string
	UserAccountStatusExplanation string
	CreatedOn                    int64
	LastUpdatedOn                sql.NullInt64
	ArchivedOn                   sql.NullInt64
	BirthDay                     sql.NullInt16
	BirthMonth                   sql.NullInt16
}

type ValidIngredientMeasurementUnits struct {
	ID                     string
	Notes                  string
	ValidIngredientID      string
	ValidMeasurementUnitID string
	CreatedOn              int64
	LastUpdatedOn          sql.NullInt64
	ArchivedOn             sql.NullInt64
}

type ValidIngredientPreparations struct {
	ID                 string
	Notes              string
	ValidPreparationID string
	ValidIngredientID  string
	CreatedOn          int64
	LastUpdatedOn      sql.NullInt64
	ArchivedOn         sql.NullInt64
}

type ValidIngredients struct {
	ID                string
	Name              string
	Description       string
	Warning           string
	ContainsEgg       bool
	ContainsDairy     bool
	ContainsPeanut    bool
	ContainsTreeNut   bool
	ContainsSoy       bool
	ContainsWheat     bool
	ContainsShellfish bool
	ContainsSesame    bool
	ContainsFish      bool
	ContainsGluten    bool
	AnimalFlesh       bool
	Volumetric        bool
	IconPath          string
	CreatedOn         int64
	LastUpdatedOn     sql.NullInt64
	ArchivedOn        sql.NullInt64
	IsLiquid          sql.NullBool
}

type ValidInstruments struct {
	ID            string
	Name          string
	Variant       string
	Description   string
	IconPath      string
	CreatedOn     int64
	LastUpdatedOn sql.NullInt64
	ArchivedOn    sql.NullInt64
}

type ValidMeasurementUnits struct {
	ID            string
	Name          string
	Description   string
	IconPath      string
	Volumetric    sql.NullBool
	CreatedOn     int64
	LastUpdatedOn sql.NullInt64
	ArchivedOn    sql.NullInt64
}

type ValidPreparationInstruments struct {
	ID                 string
	Notes              string
	ValidPreparationID string
	ValidInstrumentID  string
	CreatedOn          int64
	LastUpdatedOn      sql.NullInt64
	ArchivedOn         sql.NullInt64
}

type ValidPreparations struct {
	ID            string
	Name          string
	Description   string
	IconPath      string
	CreatedOn     int64
	LastUpdatedOn sql.NullInt64
	ArchivedOn    sql.NullInt64
}

type Webhooks struct {
	ID                 string
	Name               string
	ContentType        string
	Url                string
	Method             string
	Events             string
	DataTypes          string
	Topics             string
	CreatedOn          int64
	LastUpdatedOn      sql.NullInt64
	ArchivedOn         sql.NullInt64
	BelongsToHousehold string
}
