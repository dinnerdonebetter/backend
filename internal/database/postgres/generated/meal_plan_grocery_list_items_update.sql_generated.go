// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: meal_plan_grocery_list_items_update.sql

package generated

import (
	"context"
	"database/sql"
)

const UpdateMealPlanGroceryListItem = `-- name: UpdateMealPlanGroceryListItem :exec
UPDATE meal_plan_grocery_list_items
SET
    belongs_to_meal_plan = $1,
    valid_ingredient = $2,
    valid_measurement_unit = $3,
    minimum_quantity_needed = $4,
    maximum_quantity_needed = $5,
    quantity_purchased = $6,
    purchased_measurement_unit = $7,
    purchased_upc = $8,
    purchase_price = $9,
    status_explanation = $10,
    status = $11,
	last_updated_at = NOW()
WHERE completed_at IS NULL
	AND id = $12
`

type UpdateMealPlanGroceryListItemParams struct {
	BelongsToMealPlan        string
	ValidIngredient          string
	ValidMeasurementUnit     string
	MinimumQuantityNeeded    string
	MaximumQuantityNeeded    string
	QuantityPurchased        sql.NullString
	PurchasedMeasurementUnit sql.NullString
	PurchasedUpc             sql.NullString
	PurchasePrice            sql.NullString
	StatusExplanation        string
	Status                   GroceryListItemStatus
	ID                       string
}

func (q *Queries) UpdateMealPlanGroceryListItem(ctx context.Context, arg *UpdateMealPlanGroceryListItemParams) error {
	_, err := q.db.ExecContext(ctx, UpdateMealPlanGroceryListItem,
		arg.BelongsToMealPlan,
		arg.ValidIngredient,
		arg.ValidMeasurementUnit,
		arg.MinimumQuantityNeeded,
		arg.MaximumQuantityNeeded,
		arg.QuantityPurchased,
		arg.PurchasedMeasurementUnit,
		arg.PurchasedUpc,
		arg.PurchasePrice,
		arg.StatusExplanation,
		arg.Status,
		arg.ID,
	)
	return err
}
