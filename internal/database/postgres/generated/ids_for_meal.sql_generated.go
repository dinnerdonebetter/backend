// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: ids_for_meal.sql

package generated

import (
	"context"
)

const GetRecipeIDsForMeal = `-- name: GetRecipeIDsForMeal :many

SELECT
	recipes.id
FROM
	recipes
	 JOIN meal_components ON meal_components.recipe_id = recipes.id
	 JOIN meals ON meal_components.meal_id = meals.id
WHERE
	recipes.archived_at IS NULL
	AND meals.id = $1
GROUP BY
	recipes.id
ORDER BY
	recipes.id
`

func (q *Queries) GetRecipeIDsForMeal(ctx context.Context, db DBTX, id string) ([]string, error) {
	rows, err := db.QueryContext(ctx, GetRecipeIDsForMeal, id)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []string{}
	for rows.Next() {
		var id string
		if err := rows.Scan(&id); err != nil {
			return nil, err
		}
		items = append(items, id)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
