// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0
// source: user_is_member.sql

package generated

import (
	"context"
)

const UserIsHouseholdMember = `-- name: UserIsHouseholdMember :one

SELECT EXISTS (
   SELECT household_user_memberships.id
	 FROM household_user_memberships
	WHERE household_user_memberships.archived_at IS NULL
	 AND household_user_memberships.belongs_to_household = $1
	 AND household_user_memberships.belongs_to_user = $2
)
`

type UserIsHouseholdMemberParams struct {
	BelongsToHousehold string `db:"belongs_to_household"`
	BelongsToUser      string `db:"belongs_to_user"`
}

func (q *Queries) UserIsHouseholdMember(ctx context.Context, db DBTX, arg *UserIsHouseholdMemberParams) (bool, error) {
	row := db.QueryRowContext(ctx, UserIsHouseholdMember, arg.BelongsToHousehold, arg.BelongsToUser)
	var exists bool
	err := row.Scan(&exists)
	return exists, err
}
