// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: valid_preparations_get_one.sql

package generated

import (
	"context"
	"database/sql"
	"time"
)

const GetValidPreparation = `-- name: GetValidPreparation :exec
SELECT
	valid_preparations.id,
	valid_preparations.name,
	valid_preparations.description,
	valid_preparations.icon_path,
	valid_preparations.yields_nothing,
	valid_preparations.restrict_to_ingredients,
	valid_preparations.zero_ingredients_allowable,
	valid_preparations.past_tense,
	valid_preparations.created_at,
	valid_preparations.last_updated_at,
	valid_preparations.archived_at
FROM valid_preparations
WHERE valid_preparations.archived_at IS NULL
	AND valid_preparations.id = $1
`

type GetValidPreparationRow struct {
	ID                       string
	Name                     string
	Description              string
	IconPath                 string
	YieldsNothing            bool
	RestrictToIngredients    bool
	ZeroIngredientsAllowable bool
	PastTense                string
	CreatedAt                time.Time
	LastUpdatedAt            sql.NullTime
	ArchivedAt               sql.NullTime
}

func (q *Queries) GetValidPreparation(ctx context.Context, id string) error {
	_, err := q.db.ExecContext(ctx, GetValidPreparation, id)
	return err
}
