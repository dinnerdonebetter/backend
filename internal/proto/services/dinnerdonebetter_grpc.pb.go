// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.4
// source: dinnerdonebetter.proto

package services

import (
	context "context"
	types "github.com/dinnerdonebetter/backend/internal/proto/types"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// DinnerDoneBetterClient is the client API for DinnerDoneBetter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DinnerDoneBetterClient interface {
	// Fetches a random valid ingredient
	GetRandomValidIngredient(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*types.ValidIngredient, error)
}

type dinnerDoneBetterClient struct {
	cc grpc.ClientConnInterface
}

func NewDinnerDoneBetterClient(cc grpc.ClientConnInterface) DinnerDoneBetterClient {
	return &dinnerDoneBetterClient{cc}
}

func (c *dinnerDoneBetterClient) GetRandomValidIngredient(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*types.ValidIngredient, error) {
	out := new(types.ValidIngredient)
	err := c.cc.Invoke(ctx, "/DinnerDoneBetter/GetRandomValidIngredient", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DinnerDoneBetterServer is the server API for DinnerDoneBetter service.
// All implementations must embed UnimplementedDinnerDoneBetterServer
// for forward compatibility
type DinnerDoneBetterServer interface {
	// Fetches a random valid ingredient
	GetRandomValidIngredient(context.Context, *empty.Empty) (*types.ValidIngredient, error)
	mustEmbedUnimplementedDinnerDoneBetterServer()
}

// UnimplementedDinnerDoneBetterServer must be embedded to have forward compatible implementations.
type UnimplementedDinnerDoneBetterServer struct {
}

func (UnimplementedDinnerDoneBetterServer) GetRandomValidIngredient(context.Context, *empty.Empty) (*types.ValidIngredient, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRandomValidIngredient not implemented")
}
func (UnimplementedDinnerDoneBetterServer) mustEmbedUnimplementedDinnerDoneBetterServer() {}

// UnsafeDinnerDoneBetterServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DinnerDoneBetterServer will
// result in compilation errors.
type UnsafeDinnerDoneBetterServer interface {
	mustEmbedUnimplementedDinnerDoneBetterServer()
}

func RegisterDinnerDoneBetterServer(s grpc.ServiceRegistrar, srv DinnerDoneBetterServer) {
	s.RegisterService(&DinnerDoneBetter_ServiceDesc, srv)
}

func _DinnerDoneBetter_GetRandomValidIngredient_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DinnerDoneBetterServer).GetRandomValidIngredient(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DinnerDoneBetter/GetRandomValidIngredient",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DinnerDoneBetterServer).GetRandomValidIngredient(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// DinnerDoneBetter_ServiceDesc is the grpc.ServiceDesc for DinnerDoneBetter service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DinnerDoneBetter_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "DinnerDoneBetter",
	HandlerType: (*DinnerDoneBetterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRandomValidIngredient",
			Handler:    _DinnerDoneBetter_GetRandomValidIngredient_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "dinnerdonebetter.proto",
}
