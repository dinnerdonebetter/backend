version: "3.8"
services:
    worker_queue:
        image: redis:7-bullseye
        container_name: "worker_queue"
        logging:
          driver: none
    postgres:
        hostname: "pgdatabase"
        container_name: "database"
        image: postgres:13.7
        environment:
            POSTGRES_DB: 'prixfixe'
            POSTGRES_PASSWORD: 'hunter2'
            POSTGRES_USER: 'dbuser'
        logging:
            driver: none
        ports:
            - '5432:5432'
    tracing-server:
        image: jaegertracing/all-in-one:1.22.0
        logging:
            driver: none
        ports:
          - "16686:16686"
          - "14268:14268"
    prometheus:
        image: quay.io/prometheus/prometheus:v2.25.0
        command: '--config.file=/etc/prometheus/config.yaml --storage.tsdb.path=/prometheus --log.level=debug'
        logging:
          driver: none
        ports:
            - '9090:9090'
        volumes:
            - source: "../../../environments/local/config_files/prometheus/config.yaml"
              target: "/etc/prometheus/config.yaml"
              type: 'bind'
    grafana:
      image: grafana/grafana:7.4.3
      logging:
        driver: none
      ports:
        - '3000:3000'
      links:
        - prometheus
      volumes:
        - source: '../../../environments/local/config_files/grafana/grafana.ini'
          target: '/etc/grafana/grafana.ini'
          type: 'bind'
        - source: '../../../environments/local/config_files/grafana/datasources.yaml'
          target: '/etc/grafana/provisioning/datasources/datasources.yml'
          type: 'bind'
        - source: '../../../environments/local/config_files/grafana/dashboards.yaml'
          target: '/etc/grafana/provisioning/dashboards/dashboards.yml'
          type: 'bind'
        - source: '../../../environments/local/config_files/grafana/dashboards'
          target: '/etc/grafana/provisioning/dashboards/dashboards'
          type: 'bind'
    queue_loader:
      environment:
        TARGET_ADDRESS: 'http://api_server:8000'
        CONFIGURATION_FILEPATH: '/etc/config'
        JAEGER_DISABLED: 'false'
      volumes:
        - source: '../../'
          target: '/go/src/github.com/prixfixeco/backend'
          type: 'bind'
        - source: '../../local/config_files/queue-loader-config.json'
          target: '/etc/config'
          type: 'bind'
      build:
        context: '../../..'
        dockerfile: 'environments/local/queue_loader.Dockerfile'
    meal_plan_finalizer:
      environment:
        TARGET_ADDRESS: 'http://api_server:8000'
        CONFIGURATION_FILEPATH: '/etc/config'
        JAEGER_DISABLED: 'false'
      volumes:
        - source: '../../'
          target: '/go/src/github.com/prixfixeco/backend'
          type: 'bind'
        - source: '../../local/config_files/meal-plan-finalizer-config.json'
          target: '/etc/config'
          type: 'bind'
      build:
        context: '../../..'
        dockerfile: 'environments/local/meal_plan_finalizer.Dockerfile'
    meal_plan_task_creator:
      environment:
        TARGET_ADDRESS: 'http://api_server:8000'
        CONFIGURATION_FILEPATH: '/etc/config'
        JAEGER_DISABLED: 'false'
      volumes:
        - source: '../../'
          target: '/go/src/github.com/prixfixeco/backend'
          type: 'bind'
        - source: '../../local/config_files/meal-plan-task-creator-config.json'
          target: '/etc/config'
          type: 'bind'
      build:
        context: '../../..'
        dockerfile: 'environments/local/meal_plan_task_creator.Dockerfile'
    prixfixe-server:
      container_name: "api_server"
      depends_on:
        - queue_loader
        - meal_plan_finalizer
      environment:
        CONFIGURATION_FILEPATH: '/etc/config'
        JAEGER_DISABLED: 'false'
      ports:
        - '8000:8000'
      volumes:
        - source: '../../../environments/local/config_files/service-config.json'
          target: '/etc/config'
          type: 'bind'
        - source: '../../..'
          target: '/go/src/github.com/prixfixeco/backend'
          type: 'bind'
      build:
        context: '../../..'
        dockerfile: 'environments/local/server.Dockerfile'