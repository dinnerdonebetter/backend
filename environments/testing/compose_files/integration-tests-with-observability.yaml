version: "3.8"
services:
    redis:
        logging:
            driver: none
        hostname: worker_queue
        image: redis:7-bullseye
        container_name: redis
        ports:
            - '6379:6379'
        command: [ "redis-server", "--cluster-enabled yes" ]
    postgres:
        logging:
            driver: none
        container_name: postgres
        hostname: pgdatabase
        image: postgres:10
        environment:
            POSTGRES_DB: 'prixfixe'
            POSTGRES_PASSWORD: 'hunter2'
            POSTGRES_USER: 'dbuser'
        ports:
            - '5432:5432'
    tracing-server:
        image: jaegertracing/all-in-one:1.22.0
        logging:
            driver: none
        ports:
            - "16686:16686"
            - "14268:14268"
    prometheus:
        image: quay.io/prometheus/prometheus:v2.25.0
        command: '--config.file=/etc/prometheus/config.yaml --storage.tsdb.path=/prometheus --log.level=debug'
        logging:
            driver: none
        ports:
            - '9090:9090'
        volumes:
            - source: "../../environments/local/config_files/prometheus/config.yaml"
              target: "/etc/prometheus/config.yaml"
              type: 'bind'
    grafana:
        image: grafana/grafana:7.4.3
        logging:
            driver: none
        ports:
            - '3000:3000'
        links:
            - prometheus
        volumes:
            - source: '../../environments/local/config_files/grafana/grafana.ini'
              target: '/etc/grafana/grafana.ini'
              type: 'bind'
            - source: '../../environments/local/config_files/grafana/datasources.yaml'
              target: '/etc/grafana/provisioning/datasources/datasources.yml'
              type: 'bind'
            - source: '../../environments/local/config_files/grafana/dashboards.yaml'
              target: '/etc/grafana/provisioning/dashboards/dashboards.yml'
              type: 'bind'
            - source: '../../environments/local/config_files/grafana/dashboards'
              target: '/etc/grafana/provisioning/dashboards/dashboards'
              type: 'bind'
    queue_loader:
        logging:
            driver: none
        container_name: queue_loader
        environment:
            TARGET_ADDRESS: 'http://api_server:8000'
            CONFIGURATION_FILEPATH: '/etc/config'
            JAEGER_DISABLED: 'false'
        volumes:
            - source: '../../../'
              target: '/go/src/github.com/prixfixeco/api_server'
              type: 'bind'
            - source: '../../../environments/local/config_files/queue-loader-config.json'
              target: '/etc/config'
              type: 'bind'
        build:
            context: '../../../'
            dockerfile: 'environments/testing/dockerfiles/queue_loader.Dockerfile'
    meal_plan_finalizer:
        logging:
            driver: none
        container_name: meal_plan_finalizer
        environment:
            TARGET_ADDRESS: 'http://api_server:8000'
            CONFIGURATION_FILEPATH: '/etc/config'
            JAEGER_DISABLED: 'false'
        volumes:
            - source: '../../../'
              target: '/go/src/github.com/prixfixeco/api_server'
              type: 'bind'
            - source: '../../../environments/local/config_files/meal-plan-finalizer-config.json'
              target: '/etc/config'
              type: 'bind'
        build:
            context: '../../../'
            dockerfile: 'environments/testing/dockerfiles/meal_plan_finalizer.Dockerfile'
    advanced_prep_step_creator:
        logging:
            driver: none
        container_name: advanced_prep_step_creator
        environment:
            TARGET_ADDRESS: 'http://api_server:8000'
            CONFIGURATION_FILEPATH: '/etc/config'
            JAEGER_DISABLED: 'false'
        volumes:
            - source: '../../../'
              target: '/go/src/github.com/prixfixeco/api_server'
              type: 'bind'
            - source: '../../../environments/local/config_files/meal-plan-task-creator-config.json'
              target: '/etc/config'
              type: 'bind'
        build:
            context: '../../../'
            dockerfile: 'environments/testing/dockerfiles/advanced_prep_step_creator.Dockerfile'
    prixfixe_api_server:
        # logging:
        #     driver: none
        hostname: api_server
        container_name: integration_tests_server
        depends_on:
            - queue_loader
            - meal_plan_finalizer
            - advanced_prep_step_creator
        environment:
            USE_NOOP_LOGGER: 'nope'
            CONFIGURATION_FILEPATH: '/etc/config'
        ports:
            - '8000:8000'
        build:
            context: '../../../'
            dockerfile: 'environments/testing/dockerfiles/integration-server.Dockerfile'
        volumes:
            - source: '../../../environments/testing/config_files/integration-tests-config.json'
              target: '/etc/config'
              type: 'bind'
    test:
        environment:
            TARGET_ADDRESS: 'http://api_server:8000'
            TARGET_DATABASE: 'postgres://dbuser:hunter2@pgdatabase:5432/prixfixe?sslmode=disable'
        depends_on:
            - queue_loader
            - meal_plan_finalizer
            - advanced_prep_step_creator
        links:
            - prixfixe_api_server
        build:
            context: '../../../'
            dockerfile: 'environments/testing/dockerfiles/integration-tests.Dockerfile'
        container_name: 'integration_tests'
