on: [pull_request]
#  push:
#    branches:
#      - dev
name: Deploy
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'

      - id: 'auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.DEV_GOOGLE_CLOUD_CREDENTIALS }}'

      # Setup gcloud CLI
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |
          docker build --tag gcr.io/prixfixe-dev/api_server:${{  github.sha }} --file environments/dev/dockerfiles/api_server.Dockerfile .
          docker push gcr.io/prixfixe-dev/api_server:${{  github.sha }}
          docker build --tag gcr.io/prixfixe-dev/api_server:latest --file environments/dev/dockerfiles/api_server.Dockerfile .
          docker push gcr.io/prixfixe-dev/api_server:latest

      - name: Deploy cloud function
        run: |
          gcloud functions deploy data-changes --trigger-resource TRIGGER_BUCKET_NAME --trigger-event google.pubsub.topic.publish

  scaffold:
    runs-on: ubuntu-latest
    needs: [
      build
    ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.2
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_API_TOKEN  }}

      - name: Terraform Init
        working-directory: environments/dev/terraform
        id: init
        run: terraform init

      - name: Terraform Format
        working-directory: environments/dev/terraform
        id: fmt
        run: terraform fmt -check

      - name: Build data changes worker archive
        run: zip environments/dev/terraform/data_changes_function.zip cmd/functions/data_changes

      - name: copy server config file
        working-directory: environments/dev
        run: |
          cp config_files/service-config.json terraform/service-config.json
          cp config_files/worker-config.json terraform/worker-config.json

      - name: Terraform Validate
        working-directory: environments/dev/terraform
        id: validate
        run: terraform validate -no-color

      # - name: Terraform Plan
      #   working-directory: environments/dev/terraform
      #   id: plan
      #   if: github.event_name == 'pull_request'
      #   run: terraform plan -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve
        # if: github.event_name == 'release'
        working-directory: environments/dev/terraform

#  deploy:
#    needs: [
#      scaffold,
#    ]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - id: 'auth'
#        uses: 'google-github-actions/auth@v0'
#        with:
#          credentials_json: '${{ secrets.DEV_GOOGLE_CLOUD_CREDENTIALS }}'
#
#      - name: 'Set up Cloud SDK'
#        uses: 'google-github-actions/setup-gcloud@v0'
#
##      - id: 'deploy'
##        uses: 'google-github-actions/deploy-cloudrun@v0'
##        with:
##          service: 'hello-cloud-run'
##          image: 'gcr.io/cloudrun/hello'
