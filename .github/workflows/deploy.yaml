on: [pull_request]
name: Deploy
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17.3'

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build writer lambda
        run: go build -o writer github.com/prixfixeco/api_server/cmd/workers/lambdas/writes

      - name: Zip writer lambda
        run: zip writer_lambda.zip writer

      - name: Build updater lambda
        run: go build -o updater github.com/prixfixeco/api_server/cmd/workers/lambdas/updates

      - name: Zip updater lambda
        run: zip updater_lambda.zip updater

      - name: Build archiver lambda
        run: go build -o archiver github.com/prixfixeco/api_server/cmd/workers/lambdas/archives

      - name: Zip archiver lambda
        run: zip archiver_lambda.zip archiver

      - name: Build data changes lambda
        run: go build -o data_changes github.com/prixfixeco/api_server/cmd/workers/lambdas/data_changes

      - name: Build Zip changes lambda
        run: zip data_changes_lambda.zip data_changes

      - name: Build chores lambda
        run: go build -o data_changes github.com/prixfixeco/api_server/cmd/workers/lambdas/chores

      - name: Zip chores lambda
        run: zip data_changes_lambda.zip data_changes

      - name: Upload writer lambda
        uses: actions/upload-artifact@v2
        with:
          working-directory: environments/dev/terraform
          name: writer
          path: writer_lambda.zip

      - name: Upload updater lambda
        uses: actions/upload-artifact@v2
        with:
          name: updater
          path: updater_lambda.zip

      - name: Upload archiver lambda
        uses: actions/upload-artifact@v2
        with:
          name: archiver
          path: archiver_lambda.zip

      - name: Upload data changes lambda
        uses: actions/upload-artifact@v2
        with:
          name: data_changes
          path: data_changes_lambda.zip

      - name: Upload chores lambda
        uses: actions/upload-artifact@v2
        with:
          name: chores
          path: chores_lambda.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      working-directory: environments/dev/terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.TERRAFORM_CLOUD_API_TOKEN  }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Download writer lambda
        uses: actions/download-artifact@v2
        with:
          name: writer_lambda.zip

      - name: Download updater lambda
        uses: actions/download-artifact@v2
        with:
          name: updater_lambda.zip

      - name: Download archiver lambda
        uses: actions/download-artifact@v2
        with:
          name: archiver_lambda.zip

      - name: Download data changes lambda
        uses: actions/download-artifact@v2
        with:
          name: data_changes_lambda.zip

      - name: Download chores lambda
        uses: actions/download-artifact@v2
        with:
          name: chores_lambda.zip  

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true

###### source: https://github.com/hashicorp/learn-terraform-github-actions/blob/c34ebed8a1d373a992c44df2a5ba5a711df097aa/.github/workflows/terraform.yml
#      - uses: actions/github-script@0.9.0
#        if: github.event_name == 'pull_request'
#        env:
#          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
#        with:
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#          script: |
#            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
#            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
#            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
#            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
#            <details><summary>Show Plan</summary>
#            \`\`\`\n
#            ${process.env.PLAN}
#            \`\`\`
#            </details>
#            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
#            github.issues.createComment({
#              issue_number: context.issue.number,
#              owner: context.repo.owner,
#              repo: context.repo.repo,
#              body: output
#            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve